image: docker:stable

stages:
  - build_bdd_centrale
  - build_neo4j_CSV
  - build_neo4j_database
  - build_docker_image
  - deploy

variables:
  GIT_DEPTH: "1"
  DOCKER_IMAGE_NAME: "$CI_REGISTRY_IMAGE/neo4j_toflit18:$CI_COMMIT_REF_SLUG"

build_bdd_centrale:
  stage: build_bdd_centrale
  tags:
    - proxy
  artifacts:
    untracked: true
    expire_in: "1 day"
    exclude:
      - "__pycache__"
  image: python:3.7-alpine3.9
  script:
    - cd ./scripts/ && python aggregate_sources_in_bdd_centrale_with_calculations.py
  only:
    - new_import
    - staging
    - prod

neo4j_CSV:
  stage: build_neo4j_CSV
  tags:
    - proxy
  artifacts:
    untracked: true
    expire_in: "1 day"
  dependencies:
    - build_bdd_centrale
  image: node:7.9.0-alpine
  script:
    - apk add --no-cache git
    - mkdir -p neo4j_import
    - cd $CI_PROJECT_DIR/scripts/neo4j && npm i
    - cd $CI_PROJECT_DIR/scripts/neo4j && npm run import -- -- --path $CI_PROJECT_DIR --output $CI_PROJECT_DIR/neo4j_import/
  only:
    - new_import
    - staging
    - prod

neo4j_database:
  stage: build_neo4j_database
  tags:
    - proxy
  artifacts:
    untracked: true
    expire_in: "1 day"
  dependencies:
    - neo4j_CSV
  image: neo4j:3.5.16
  script:
    - mkdir -p neo4j_database
    # import CSV to neo4j
    - /var/lib/neo4j/bin/neo4j-admin import --database graph.db --nodes $CI_PROJECT_DIR/neo4j_import/nodes.csv --relationships $CI_PROJECT_DIR/neo4j_import/edges.csv
    - mv /var/lib/neo4j/data/databases/graph.db $CI_PROJECT_DIR/neo4j_database/
  only:
    - new_import
    - staging
    - prod

build_docker_image:
  stage: build_docker_image
  tags:
    - proxy
  dependencies:
    - neo4j_database
  script:
    - chown -R 101:101 ${CI_PROJECT_DIR}/neo4j_database/
    #- cp -r ${CI_PROJECT_DIR}/base ${CI_PROJECT_DIR}/neo4j_database/
    #- ls -la ${CI_PROJECT_DIR}/neo4j_database/base
    # start neo4j with the DB created in previous step
    - docker run --detach --name neo4j  --volume=${CI_PROJECT_DIR}/neo4j_database/:/data/databases/ --env "NEO4J_dbms_memory_heap_maxSize=2048M" --env "NEO4J_dbms_memory_pagecache_size=2048M" --env "NEO4J_dbms_transaction_timeout=180s" --env "NEO4J_AUTH=neo4j/secret" neo4j:3.5.16
    # run quantities and indices scripts
    - docker run --volume=${CI_PROJECT_DIR}/:/toflit18_data --user root --entrypoint /bin/sh --rm=true --link neo4j:neo4j --env "NEO4J_USER=neo4j" --env "NEO4J_PASSWORD=secret" --env "NEO4J_HOST=neo4j" --env "NEO4J_PORT=7687" node:7.9.0-alpine  -c "cd /toflit18_data/scripts/neo4j/ && npm run quantities -- -- --path $CI_PROJECT_DIR && npm run indices"
    # stop neo4j
    - docker stop neo4j
    # build image
    - docker build -t $DOCKER_IMAGE_NAME -f Dockerfile .
    # push
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $DOCKER_IMAGE_NAME
    - docker logs neo4j
    - docker rm neo4j
  only:
    - new_import
    - staging
    - prod

deploy:
  image:
    name: jrisp/kubehelper:latest
    entrypoint: [""]
  stage: deploy
  tags:
    - proxy
  dependencies:
    - build_docker_image
  script:
    - kubectl config set-cluster k8s --server="$KUBE_URL" --certificate-authority="$KUBE_CA_PEM_FILE"
    - kubectl config set-credentials gitlab-admin --token="$KUBE_TOKEN"
    - kubectl config set-context default --cluster=k8s --user=gitlab-admin
    - kubectl config use-context default
    - kubectl -n toflit18 rollout restart deployment toflit18-db
    - kubectl -n toflit18 rollout restart deployment toflit18-api
  environment:
    name: $CI_COMMIT_REF_SLUG
  only:
    - staging
    - prod
