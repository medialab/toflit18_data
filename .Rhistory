rm(list = ls())
### On se connecte à ma session DHS
set_rdhs_config(email = "edouard.pignede@ird.fr",
project = "Senegal vulnerability to climate change")
### On selectionne le DHS chargé que l'on veut télécharger
### SN => Sénégal ; FL => Flat file :plus rapide ;HR => Household Recode ; KR => children's recode
datasets_HR <- dhs_datasets(countryIds = "SN",
surveyYear = "2019",
fileFormat = "FL",
fileType = "HR" )
datasets_KR <- dhs_datasets(countryIds = "SN",
surveyYear = "2019",
fileFormat = "FL",
fileType = "KR" )
datasets_IR <- dhs_datasets(countryIds = "SN",
surveyYear = "2019",
fileFormat = "FL",
fileType = "IR" )
### On le télécharge
downloads_HR <- get_datasets(datasets_HR$FileName)
downloads_KR <- get_datasets(datasets_KR$FileName)
downloads_IR <- get_datasets(datasets_IR$FileName)
### On le charge sur R
data_hous <- readRDS(downloads_HR$SNHR8AFL)
data_child <- readRDS(downloads_KR$SNKR8AFL)
data_women <- readRDS(downloads_IR$SNIR8AFL)
data_women$v106
library(dplyr)
library(plyr)
library(tidyverse)
library(stringr)
library(readr)
library(pracma)
library(IndexNumR)
library(hpiR)
library(tidyverse)
read_sav("C:/Users/pignede/menage_final.sav")
install.packages("haven")
read_sav("C:/Users/pignede/menage_final.sav")
devtools::install_github("tidyverse/haven")
devtools::install_github("tidyverse/haven")
library(haven)
install.packages("haven")
library(haven)
read_sav("C:/Users/pignede/menage_final.sav")
read_sav("C:/Users/pignede/Telechargements/menage_final.sav")
read_sav("C:/Users/pignede/Downloads/menage_final.sav")
as.data.frame(read_sav("C:/Users/pignede/Downloads/menage_final.sav"))
a <- read_sav("C:/Users/pignede/Downloads/menage_final.sav")
a$id_menage
a$region
a$departement
a$M10
a$M9
library(sp)
library(xlsx)
library(stringr)
library(dplyr)
str_to_upper("Thèse")
### On charge l'ensemble des données
Mots_cles <- read.xlsx2("./Data/Mots-clés.xlsx",
sheetIndex = 1)
getwd()
source('C:/Users/pignede/Desktop/Exported.R', echo=TRUE)
source('C:/Users/pignede/Desktop/Exported.R', echo=TRUE)
source('C:/Users/pignede/Desktop/Exported.R', echo=TRUE)
library(dplyr)
library(tidyverse)
library(stringr)
library(readr)
library(pracma)
library(openxlsx)
library(hpiR)
### A définir: emplacement du working directory
setwd("C:/Users/pignede/Documents/GitHub/toflit18_data")
### Nettoyage de l'espace de travail
rm(list = ls())
Index_composition <- read.csv2("./scripts/Edouard/Composition_index_results.csv", row.names = NULL)
Index_composition <- Index_composition %>%
mutate_if(is.character, as.factor) %>%
mutate(Product_sector = relevel(Product_sector, "All"),
Exports_imports = relevel(Exports_imports, "Imports"))
Reg_trend_categ <- lm(log(Index_value) ~ year + Ville + Ville*year + Product_sector + Product_sector*year,
data = subset(Index_composition, Exports_imports == "Exports" & Product_sector != "All"))
summary(Reg_trend_categ)
Index_composition_global <- read.csv2("./scripts/Edouard/Composition_index_results_global.csv", row.names = NULL)
Index_composition_global <- Index_composition_global %>%
mutate_if(is.character, as.factor) %>%
mutate(Product_sector = relevel(Product_sector, "All"))
Reg_trend_categ_global <- lm(log(Index_value) ~ year + Product_sector + Product_sector*year ,
data = Index_composition_global)
summary(Reg_trend_categ_global)
Index_partner <- read.csv2("./scripts/Edouard/Partner_index_results.csv", row.names = NULL)
Index_partner <- Index_partner %>%
mutate_if(is.character, as.factor) %>%
mutate(Partner = relevel(Partner, "All"),
Exports_imports = relevel(Exports_imports, "Imports"))
Reg_trend_categ <- lm(log(Index_value) ~ year + Ville + Ville*year + Partner + Partner*year,
data = subset(Index_partner, Exports_imports == "Imports" & Partner != "All"))
summary(Reg_trend_categ)
Index_partner <- read.csv2("./scripts/Edouard/Partner_index_results.csv", row.names = NULL)
Index_partner <- Index_partner %>%
mutate_if(is.character, as.factor) %>%
mutate(Partner = relevel(Partner, "All"),
Exports_imports = relevel(Exports_imports, "Exports"))
Reg_trend_categ <- lm(log(Index_value) ~ year + Ville + Ville*year + Partner + Partner*year,
data = subset(Index_partner, Exports_imports == "Exports" & Partner != "All"))
summary(Reg_trend_categ)
rm(list = ls())
### A définir
setwd("C:/Users/pignede/Documents/GitHub/toflit18_data")
### Chargement des fonctions de récuprétion des valeurs des indices
source("./scripts/Edouard/Trend_script/Recuperation_index_value.R")
### Chargement des fonctions de récuprétion des valeurs des indices
source("./scripts/Edouard/Trend_script/Recuperation_index_value.R")
for (Type in c("Imports", "Exports")) {
Index_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Index <- Recuperation_Index_port(Port = Port, Type = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index_value) ~ War_var,
weight = Part_value, data = Index)
Index_reg_trend[[paste0("trend_", Port, "_", Type)]] = trend
}
Table_trend = export_summs(Index_reg_trend, error.pos = "right",
model.names = names(Index_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = paste0("./scripts/Edouard/Regression_results/Regression_results_trend_", Type, ".xlsx"),
digits = 4)
print(Table_trend)
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
Coef = 2
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[Coef] - Index_reg_trend[[model2]]$coefficients[Coef]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[Coef] + diag(vcov(Index_reg_trend[[model2]]))[Coef])
}
}
print(matrix_coefficient_test)
}
### Chargement des fonctions de récuprétion des valeurs des indices
source("./scripts/Edouard/Trend_script/Recuperation_index_value.R")
for (Type in c("Imports", "Exports")) {
Index_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Index <- Recuperation_Index_port(Port = Port, Type = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index_value) ~ War_var,
weight = Part_value, data = Index)
Index_reg_trend[[paste0("trend_", Port, "_", Type)]] = trend
}
Table_trend = export_summs(Index_reg_trend, error.pos = "right",
model.names = names(Index_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = paste0("./scripts/Edouard/Regression_results/Regression_results_trend_", Type, ".xlsx"),
digits = 4)
print(Table_trend)
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
Coef = 2
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[Coef] - Index_reg_trend[[model2]]$coefficients[Coef]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[Coef] + diag(vcov(Index_reg_trend[[model2]]))[Coef])
}
}
print(matrix_coefficient_test)
}
for (Type in c("Imports", "Exports")) {
Index_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Index <- Recuperation_Index_port(Port = Port, Type = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index_value) ~ War_non_ter + War_duree_non_ter,
weight = Part_value, data = Index)
Index_reg_trend[[paste0("trend_", Port, "_", Type)]] = trend
}
Table_trend = export_summs(Index_reg_trend, error.pos = "right",
model.names = names(Index_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = paste0("./scripts/Edouard/Regression_results/Regression_results_trend_", Type, ".xlsx"),
digits = 4)
print(Table_trend)
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
Coef = 2
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[Coef] - Index_reg_trend[[model2]]$coefficients[Coef]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[Coef] + diag(vcov(Index_reg_trend[[model2]]))[Coef])
}
}
print(matrix_coefficient_test)
}
War_data_frame <- War_data_frame %>%
mutate(War_var = case_when(
# (year >= 1688 & year <= 1697) ~ 1,
# (year >= 1702 & year <= 1713) ~ 1,
# (year >= 1733 & year <= 1738) ~ 1,
# (year >= 1740 & year <= 1744) ~ 1,
# (year >= 1744 & year <= 1748) ~ 1,
(year >= 1756 & year <= 1763) ~ 1,
# (year >= 1778 & year <= 1783) ~ 1,
# (year >= 1793 & year <= 1802) ~ 1,
# (year >= 1803 & year <= 1807) ~ 1,
# (year >= 1807 & year <= 1815) ~ 1,
TRUE ~ 0)) %>%
mutate(War_non_ter = case_when((year >= 1744 & year <= 1748) ~ 1,
(year >= 1756 & year <= 1763) ~ 1,
(year >= 1778 & year <= 1783) ~ 1,
(year >= 1793 & year <= 1802) ~ 1,
(year >= 1803 & year <= 1807) ~ 1,
TRUE ~ 0)) %>%
mutate(War_duree = c(rep(0, 68), 0:7, rep(0,42)),
War_duree_non_ter = c(rep(0, 56), 0:4,
rep(0,7), 0:7, rep(0,14), 0:5, rep(0,9), 0:9, 0:4, 0:7))
War_data_frame <- War_data_frame %>%
mutate(War_var = case_when(
# (year >= 1688 & year <= 1697) ~ 1,
# (year >= 1702 & year <= 1713) ~ 1,
# (year >= 1733 & year <= 1738) ~ 1,
# (year >= 1740 & year <= 1744) ~ 1,
# (year >= 1744 & year <= 1748) ~ 1,
(year >= 1756 & year <= 1763) ~ 1,
# (year >= 1778 & year <= 1783) ~ 1,
# (year >= 1793 & year <= 1802) ~ 1,
# (year >= 1803 & year <= 1807) ~ 1,
# (year >= 1807 & year <= 1815) ~ 1,
TRUE ~ 0)) %>%
mutate(War_non_ter = case_when((year >= 1744 & year <= 1748) ~ 1,
(year >= 1756 & year <= 1763) ~ 1,
(year >= 1778 & year <= 1783) ~ 1,
(year >= 1793 & year <= 1802) ~ 1,
(year >= 1803 & year <= 1807) ~ 1,
TRUE ~ 0)) %>%
mutate(War_duree = c(rep(0, 68), 0:7, rep(0,52)),
War_duree_non_ter = c(rep(0, 56), 0:4,
rep(0,7), 0:7, rep(0,14), 0:5, rep(0,9), 0:9, 0:4, 0:7))
War_data_frame
### Chargement des fonctions de récuprétion des valeurs des indices
source("./scripts/Edouard/Trend_script/Recuperation_index_value.R")
for (Type in c("Imports", "Exports")) {
Index_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Index <- Recuperation_Index_port(Port = Port, Type = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index_value) ~ War_var + War_duree,
weight = Part_value, data = Index)
Index_reg_trend[[paste0("trend_", Port, "_", Type)]] = trend
}
Table_trend = export_summs(Index_reg_trend, error.pos = "right",
model.names = names(Index_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = paste0("./scripts/Edouard/Regression_results/Regression_results_trend_", Type, ".xlsx"),
digits = 4)
print(Table_trend)
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
Coef = 2
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[Coef] - Index_reg_trend[[model2]]$coefficients[Coef]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[Coef] + diag(vcov(Index_reg_trend[[model2]]))[Coef])
}
}
print(matrix_coefficient_test)
}
### Chargement des fonctions de récuprétion des valeurs des indices
source("./scripts/Edouard/Trend_script/Recuperation_index_value.R")
Termes_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Termes_echange <- Recuperation_termes_echange(Port = Port)
Termes_echange <- merge(Termes_echange, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Termes_echange_value) ~ year + War_non_ter, data = Termes_echange)
Termes_reg_trend[[paste0("trend_", Port, "_")]] = trend
#
#
# Table = export_summs(trend, trend_duree, error.pos = "right",
#                      model.names = c("Simple_trend", "dureeratic_trend"),
#                      error_pos = "right")
}
Table_trend = export_summs(Termes_reg_trend, error.pos = "right",
model.names = names(Termes_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_results_termes_echange_trend.xlsx",
digits = 4)
print(Table_trend)
Termes_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Termes_echange <- Recuperation_termes_echange(Port = Port)
Termes_echange <- merge(Termes_echange, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Termes_echange_value) ~ year + War_var + War_duree, data = Termes_echange)
Termes_reg_trend[[paste0("trend_", Port, "_")]] = trend
#
#
# Table = export_summs(trend, trend_duree, error.pos = "right",
#                      model.names = c("Simple_trend", "dureeratic_trend"),
#                      error_pos = "right")
}
Table_trend = export_summs(Termes_reg_trend, error.pos = "right",
model.names = names(Termes_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_results_termes_echange_trend.xlsx",
digits = 4)
print(Table_trend)
Termes_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Termes_echange <- Recuperation_termes_echange(Port = Port)
Termes_echange <- merge(Termes_echange, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Termes_echange_value) ~ War_var + War_duree, data = Termes_echange)
Termes_reg_trend[[paste0("trend_", Port, "_")]] = trend
#
#
# Table = export_summs(trend, trend_duree, error.pos = "right",
#                      model.names = c("Simple_trend", "dureeratic_trend"),
#                      error_pos = "right")
}
Table_trend = export_summs(Termes_reg_trend, error.pos = "right",
model.names = names(Termes_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_results_termes_echange_trend.xlsx",
digits = 4)
print(Table_trend)
War_data_frame
Index <- read.csv2("./scripts/Edouard/Index_results_Smooth.csv")
Recuperation_index_smooth <- function(Port = "Marseille",
Type = "Imports")
{
Index <- read.csv2("./scripts/Edouard/Index_results_Smooth.csv")
Index <- Index %>%
filter(Ville == Port,
Exports_imports == Type) %>%
select("year", "Index_value", "Part_value", "Part_flux")
return(Index)
}
rm(list = ls())
### A définir
setwd("C:/Users/pignede/Documents/GitHub/toflit18_data")
### Chargement des fonctions de récuprétion des valeurs des indices
source("./scripts/Edouard/Trend_script/Recuperation_index_value.R")
for (Type in c("Imports", "Exports")) {
Index_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Index <- Recuperation_index_smooth(Port = Port, Type = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index_value) ~ War_var + War_duree,
weight = Part_value, data = Index)
Index_reg_trend[[paste0("trend_", Port, "_", Type)]] = trend
}
Table_trend = export_summs(Index_reg_trend, error.pos = "right",
model.names = names(Index_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = paste0("./scripts/Edouard/Regression_results/Regression_results_trend_", Type, ".xlsx"),
digits = 4)
print(Table_trend)
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
Coef = 2
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[Coef] - Index_reg_trend[[model2]]$coefficients[Coef]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[Coef] + diag(vcov(Index_reg_trend[[model2]]))[Coef])
}
}
print(matrix_coefficient_test)
}
for (Type in c("Imports", "Exports")) {
Index_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Index <- Recuperation_index_Smooth(Port = Port, Type = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index_value) ~ War_var + War_duree,
weight = Part_value, data = Index)
Index_reg_trend[[paste0("trend_", Port, "_", Type)]] = trend
}
Table_trend = export_summs(Index_reg_trend, error.pos = "right",
model.names = names(Index_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = paste0("./scripts/Edouard/Regression_results/Regression_results_trend_", Type, ".xlsx"),
digits = 4)
print(Table_trend)
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
Coef = 2
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[Coef] - Index_reg_trend[[model2]]$coefficients[Coef]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[Coef] + diag(vcov(Index_reg_trend[[model2]]))[Coef])
}
}
print(matrix_coefficient_test)
}
rm(list = ls())
### A définir
setwd("C:/Users/pignede/Documents/GitHub/toflit18_data")
### Chargement des fonctions de récuprétion des valeurs des indices
source("./scripts/Edouard/Trend_script/Recuperation_index_value.R")
for (Type in c("Imports", "Exports")) {
Index_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Index <- Recuperation_index_Smooth(Port = Port, Type = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index_value) ~ War_var + War_duree,
weight = Part_value, data = Index)
Index_reg_trend[[paste0("trend_", Port, "_", Type)]] = trend
}
Table_trend = export_summs(Index_reg_trend, error.pos = "right",
model.names = names(Index_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = paste0("./scripts/Edouard/Regression_results/Regression_results_trend_", Type, ".xlsx"),
digits = 4)
print(Table_trend)
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
Coef = 2
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[Coef] - Index_reg_trend[[model2]]$coefficients[Coef]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[Coef] + diag(vcov(Index_reg_trend[[model2]]))[Coef])
}
}
print(matrix_coefficient_test)
}
for (Type in c("Imports", "Exports")) {
Index_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Index <- Recuperation_index_Smooth(Port = Port, Type = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index_value) ~ year + War_var + War_duree,
weight = Part_value, data = Index)
Index_reg_trend[[paste0("trend_", Port, "_", Type)]] = trend
}
Table_trend = export_summs(Index_reg_trend, error.pos = "right",
model.names = names(Index_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = paste0("./scripts/Edouard/Regression_results/Regression_results_trend_", Type, ".xlsx"),
digits = 4)
print(Table_trend)
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
Coef = 2
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[Coef] - Index_reg_trend[[model2]]$coefficients[Coef]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[Coef] + diag(vcov(Index_reg_trend[[model2]]))[Coef])
}
}
print(matrix_coefficient_test)
}
for (Type in c("Imports", "Exports")) {
Index_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Index <- Recuperation_index_Smooth(Port = Port, Type = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index_value) ~ year + War_var + War_duree,
weight = Part_value, data = Index)
Index_reg_trend[[paste0("trend_", Port, "_", Type)]] = trend
}
Table_trend = export_summs(Index_reg_trend, error.pos = "right",
model.names = names(Index_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = paste0("./scripts/Edouard/Regression_results/Regression_results_trend_", Type, ".xlsx"),
digits = 4)
print(Table_trend)
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
Coef = 2
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[Coef] - Index_reg_trend[[model2]]$coefficients[Coef]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[Coef] + diag(vcov(Index_reg_trend[[model2]]))[Coef])
}
}
print(matrix_coefficient_test)
}
