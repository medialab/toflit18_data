spread(Exports_imports, Index_value) %>%
mutate(Exports = 100 * Exports / Exports[year == 1789],
Imports = 100 * Imports /Imports[year == 1789],
Terme_echange_eem = Exports / Imports)
plot(drop_na(Terme_echange_eem[, c("year", "Terme_echange_eem")]), type = "o")
plot(drop_na(Terme_echange[ , c("year", "Terme_echange")]), type = "o", pch = 19,
lwd = 2, ylab = "Termes de léchange", xlab = "Année", main = "Evolution des termes de l'échange",
panel.first = grid())
library(dplyr)
library(tidyverse)
library(stringr)
library(readr)
library(pracma)
library(openxlsx)
library(hpiR)
library(corrplot)
library(ggplot2)
library(reshape2)
library(gdata)
### A définir: emplacement du working directory
setwd("C:/Users/pignede/Documents/GitHub/toflit18_data")
### Nettoyage de l'espace de travail
rm(list = ls())
Index_res_global_Imports <- read.csv2("./scripts/Edouard/Indice_global_value/Indice_global_filtre_ville_imports.csv",
row.names = NULL, dec = ",")
Index_res_global_Imports$Index <- 100*Index_res_global_Imports$Index/Index_res_global_Imports$Index[Index_res_global_Imports$year == 1789]
Index_res_global_Exports <- read.csv2("./scripts/Edouard/Indice_global_value/Indice_global_filtre_ville_exports.csv",
row.names = NULL, dec = ",")
Index_res_global_Exports$Index <- 100*Index_res_global_Exports$Index/Index_res_global_Exports$Index[Index_res_global_Exports$year == 1789]
Terme_echange <- merge(Index_res_global_Imports, Index_res_global_Exports, by = "year",
suffixes = c("_Imports", "_Exports"))
Terme_echange$Terme_echange <- Terme_echange$Index_Exports/Terme_echange$Index_Imports
plot(drop_na(Terme_echange[ , c("year", "Terme_echange")]), type = "o", pch = 19,
lwd = 2, ylab = "Termes de léchange", xlab = "Année", main = "Evolution des termes de l'échange",
panel.first = grid())
Index_partner_global <- read.csv2("./scripts/Edouard/Partner_index_results_global.csv", row.names = NULL)
Terme_echange_rdm <- Index_partner_global %>%
filter(Partner == "Reste_du_monde") %>%
select(c("year", "Index_value", "Exports_imports")) %>%
spread(Exports_imports, Index_value) %>%
mutate(Exports = 100 * Exports / Exports[year == 1789],
Imports = 100 * Imports /Imports[year == 1789],
Terme_echange_rdm = Exports / Imports)
lines(drop_na(Terme_echange_rdm[, c("year", "Terme_echange_rdm")]), type = "o", pch = 19,
lwd = 2)
plot(drop_na(Terme_echange_eem[, c("year", "Terme_echange_eem")]), type = "o", pch = 19,
lwd = 2, col = "blue")
Index_partner_global <- read.csv2("./scripts/Edouard/Partner_index_results_global.csv", row.names = NULL)
Terme_echange_eem <- Index_partner_global %>%
filter(Partner == "Europe_et_Mediterranee") %>%
select(c("year", "Index_value", "Exports_imports")) %>%
spread(Exports_imports, Index_value) %>%
mutate(Exports = 100 * Exports / Exports[year == 1789],
Imports = 100 * Imports /Imports[year == 1789],
Terme_echange_eem = Exports / Imports)
plot(drop_na(Terme_echange_eem[, c("year", "Terme_echange_eem")]), type = "o", pch = 19,
lwd = 2, col = "blue")
Index_res_global_Imports <- read.csv2("./scripts/Edouard/Indice_global_value/Indice_global_filtre_ville_imports.csv",
row.names = NULL, dec = ",")
Index_res_global_Imports$Index <- 100*Index_res_global_Imports$Index/Index_res_global_Imports$Index[Index_res_global_Imports$year == 1789]
Index_res_global_Exports <- read.csv2("./scripts/Edouard/Indice_global_value/Indice_global_filtre_ville_exports.csv",
row.names = NULL, dec = ",")
Index_res_global_Exports$Index <- 100*Index_res_global_Exports$Index/Index_res_global_Exports$Index[Index_res_global_Exports$year == 1789]
Terme_echange <- merge(Index_res_global_Imports, Index_res_global_Exports, by = "year",
suffixes = c("_Imports", "_Exports"))
Terme_echange$Terme_echange <- Terme_echange$Index_Exports/Terme_echange$Index_Imports
plot(drop_na(Terme_echange[ , c("year", "Terme_echange")]), type = "o", pch = 19,
lwd = 2, ylab = "Termes de léchange", xlab = "Année", main = "Evolution des termes de l'échange",
panel.first = grid())
Index_partner_global <- read.csv2("./scripts/Edouard/Partner_index_results_global.csv", row.names = NULL)
Terme_echange_rdm <- Index_partner_global %>%
filter(Partner == "Reste_du_monde") %>%
select(c("year", "Index_value", "Exports_imports")) %>%
spread(Exports_imports, Index_value) %>%
mutate(Exports = 100 * Exports / Exports[year == 1789],
Imports = 100 * Imports /Imports[year == 1789],
Terme_echange_rdm = Exports / Imports)
lines(drop_na(Terme_echange_rdm[, c("year", "Terme_echange_rdm")]), type = "o", pch = 19,
lwd = 2, col = "red")
Index_partner_global <- read.csv2("./scripts/Edouard/Partner_index_results_global.csv", row.names = NULL)
Terme_echange_eem <- Index_partner_global %>%
filter(Partner == "Europe_et_Mediterranee") %>%
select(c("year", "Index_value", "Exports_imports")) %>%
spread(Exports_imports, Index_value) %>%
mutate(Exports = 100 * Exports / Exports[year == 1789],
Imports = 100 * Imports /Imports[year == 1789],
Terme_echange_eem = Exports / Imports)
lines(drop_na(Terme_echange_eem[, c("year", "Terme_echange_eem")]), type = "o", pch = 19,
lwd = 2, col = "blue")
plot(drop_na(Terme_echange[ , c("year", "Terme_echange")]), type = "o", pch = 19,
lwd = 2, ylab = "Termes de léchange", xlab = "Année", main = "Evolution des termes de l'échange",
panel.first = grid(), ylim = c(0.4, 4))
Index_partner_global <- read.csv2("./scripts/Edouard/Partner_index_results_global.csv", row.names = NULL)
Terme_echange_rdm <- Index_partner_global %>%
filter(Partner == "Reste_du_monde") %>%
select(c("year", "Index_value", "Exports_imports")) %>%
spread(Exports_imports, Index_value) %>%
mutate(Exports = 100 * Exports / Exports[year == 1789],
Imports = 100 * Imports /Imports[year == 1789],
Terme_echange_rdm = Exports / Imports)
lines(drop_na(Terme_echange_rdm[, c("year", "Terme_echange_rdm")]), type = "o", pch = 19,
lwd = 2, col = "red")
plot(drop_na(Terme_echange[ , c("year", "Terme_echange")]), type = "o", pch = 19,
lwd = 2, ylab = "Termes de léchange", xlab = "Année", main = "Evolution des termes de l'échange",
panel.first = grid(), ylim = c(0.4, 3.7))
Index_partner_global <- read.csv2("./scripts/Edouard/Partner_index_results_global.csv", row.names = NULL)
Terme_echange_rdm <- Index_partner_global %>%
filter(Partner == "Reste_du_monde") %>%
select(c("year", "Index_value", "Exports_imports")) %>%
spread(Exports_imports, Index_value) %>%
mutate(Exports = 100 * Exports / Exports[year == 1789],
Imports = 100 * Imports /Imports[year == 1789],
Terme_echange_rdm = Exports / Imports)
lines(drop_na(Terme_echange_rdm[, c("year", "Terme_echange_rdm")]), type = "o", pch = 19,
lwd = 2, col = "red")
Index_partner_global <- read.csv2("./scripts/Edouard/Partner_index_results_global.csv", row.names = NULL)
Terme_echange_eem <- Index_partner_global %>%
filter(Partner == "Europe_et_Mediterranee") %>%
select(c("year", "Index_value", "Exports_imports")) %>%
spread(Exports_imports, Index_value) %>%
mutate(Exports = 100 * Exports / Exports[year == 1789],
Imports = 100 * Imports /Imports[year == 1789],
Terme_echange_eem = Exports / Imports)
lines(drop_na(Terme_echange_eem[, c("year", "Terme_echange_eem")]), type = "o", pch = 19,
lwd = 2, col = "blue")
legend("topright", legend = c("Total", "Europe et Méditérranée", "Reste du monde"),
col = c("black", "blue", "red"))
legend("topright", legend = c("Total", "Europe et Méditérranée", "Reste du monde"),
col = c("black", "blue", "red"), lwd = 2)
Index_res_global_Imports <- read.csv2("./scripts/Edouard/Indice_global_value/Indice_global_filtre_ville_imports.csv",
row.names = NULL, dec = ",")
Index_res_global_Imports$Index <- 100*Index_res_global_Imports$Index/Index_res_global_Imports$Index[Index_res_global_Imports$year == 1789]
Index_res_global_Exports <- read.csv2("./scripts/Edouard/Indice_global_value/Indice_global_filtre_ville_exports.csv",
row.names = NULL, dec = ",")
Index_res_global_Exports$Index <- 100*Index_res_global_Exports$Index/Index_res_global_Exports$Index[Index_res_global_Exports$year == 1789]
Terme_echange <- merge(Index_res_global_Imports, Index_res_global_Exports, by = "year",
suffixes = c("_Imports", "_Exports"))
Terme_echange$Terme_echange <- Terme_echange$Index_Exports/Terme_echange$Index_Imports
plot(drop_na(Terme_echange[ , c("year", "Terme_echange")]), type = "o", pch = 19,
lwd = 2, ylab = "Termes de léchange", xlab = "Année", main = "Evolution des termes de l'échange",
panel.first = grid(), ylim = c(0.4, 3.7))
Index_partner_global <- read.csv2("./scripts/Edouard/Partner_index_results_global.csv", row.names = NULL)
Terme_echange_rdm <- Index_partner_global %>%
filter(Partner == "Reste_du_monde") %>%
select(c("year", "Index_value", "Exports_imports")) %>%
spread(Exports_imports, Index_value) %>%
mutate(Exports = 100 * Exports / Exports[year == 1789],
Imports = 100 * Imports /Imports[year == 1789],
Terme_echange_rdm = Exports / Imports)
lines(drop_na(Terme_echange_rdm[, c("year", "Terme_echange_rdm")]), type = "o", pch = 19,
lwd = 2, col = "red")
Index_partner_global <- read.csv2("./scripts/Edouard/Partner_index_results_global.csv", row.names = NULL)
Terme_echange_eem <- Index_partner_global %>%
filter(Partner == "Europe_et_Mediterranee") %>%
select(c("year", "Index_value", "Exports_imports")) %>%
spread(Exports_imports, Index_value) %>%
mutate(Exports = 100 * Exports / Exports[year == 1789],
Imports = 100 * Imports /Imports[year == 1789],
Terme_echange_eem = Exports / Imports)
lines(drop_na(Terme_echange_eem[, c("year", "Terme_echange_eem")]), type = "o", pch = 19,
lwd = 2, col = "blue")
legend("topright", legend = c("Total", "Europe et Méditérranée", "Reste du monde"),
col = c("black", "blue", "red"), lwd = 2)
library(dplyr)
library(tidyverse)
library(stringr)
library(readr)
library(pracma)
library(openxlsx)
library(hpiR)
### A définir: emplacement du working directory
setwd("C:/Users/pignede/Documents/GitHub/toflit18_data")
### Nettoyage de l'espace de travail
rm(list = ls())
### On charge les fonctions des scripts Filtrage.R et Ventes_repetees_ponderees.R
source("./scripts/Edouard/Indice_ville_scripts/Ventes_repetees_ponderees.R")
Sector_index_calcul <- function()
{
### Création des lignes du csv
Index_pond <-  data.frame("Ville" = factor(),
"Exports_imports" = factor(),
"Product_sector" = factor(),
"year" = integer(),
"Index_value" = numeric(),
"Part_value" = numeric(),
"Part_flux" = numeric())
### Ecriture des lignes du csv
write.csv2(Index_pond,
"./scripts/Edouard/Composition_index_results.csv",
row.names = F)
### Ajout au csv de la baseline et de la baseline + changement d'un paramètre pour chaque paramètre
### à l'aide de la fonction Add_new_parma défini ci-dessous
Add_new_sector()
Add_new_sector("Manufactures")
Add_new_sector("Non-agricultural primary goods")
Add_new_sector("Agriculture")
}
Add_new_sector <- function(Product_sector = "All")
{
### Création des titres des lignes
Index_pond <-  data.frame("Ville" = factor(),
"Exports_imports" = factor(),
"Product_sector" = factor(),
"year" = integer(),
"Index_value" = numeric(),
"Part_value" = numeric(),
"Part_flux" = numeric())
for (Ville in c("Nantes", "Marseille", "Bordeaux", "La Rochelle", "Bayonne", "Rennes")) {
for (Type in c("Imports", "Exports")) {
### Calcul de l'index pour les paramètres choisis
Index <- Filter_calcul_index(Ville = Ville,  ### Choix du port d'étude
Exports_imports = Type, ### On conserve les Importations ou les Exportations
Product_sector = Product_sector)
### A jout de l'index et des parts de flux et de valeur dans le commerce total, ainsi que la valeur des paramètres
### au dataframe
for (i in seq(1,dim(Index)[1])) {
Index_pond <- Index_pond %>%
add_row(Ville = Ville,
Exports_imports = Type,
Product_sector = Product_sector,
year = Index$year[i],
Index_value = Index$Index[i],
Part_value = Index$Part_value[i],
Part_flux = Index$Part_flux[i])
}
}
}
### On charge les valeurs actuelles du csv
Index_res <- read.csv2("./scripts/Edouard/Composition_index_results.csv", row.names = NULL)
### On ajoute le nouveau dataframe
Index_res <- rbind(Index_res, Index_pond)
### On retire les lignes si elles sont déja présentes dans le csv
### Par défaut, le nouveau résultat met à jour le précédent
Index_res <- Index_res[!duplicated(Index_res[ , 1:7], fromLast = T), ]
### On écrit le résulat dans le csv
write.csv2(Index_res,
"./scripts/Edouard/Composition_index_results.csv",
row.names = F)
}
Add_new_sector("Agriculture" & "Non-agricultural primary goods")
### Nettoyage de l'espace de travail
rm(list = ls())
### On charge les fonctions des scripts Filtrage.R et Ventes_repetees_ponderees.R
source("./scripts/Edouard/Indice_ville_scripts/Ventes_repetees_ponderees.R")
Sector_index_calcul <- function()
{
### Création des lignes du csv
Index_pond <-  data.frame("Ville" = factor(),
"Exports_imports" = factor(),
"Product_sector" = factor(),
"year" = integer(),
"Index_value" = numeric(),
"Part_value" = numeric(),
"Part_flux" = numeric())
### Ecriture des lignes du csv
write.csv2(Index_pond,
"./scripts/Edouard/Composition_index_results.csv",
row.names = F)
### Ajout au csv de la baseline et de la baseline + changement d'un paramètre pour chaque paramètre
### à l'aide de la fonction Add_new_parma défini ci-dessous
Add_new_sector()
Add_new_sector("Manufactures")
Add_new_sector("Non-agricultural primary goods")
Add_new_sector("Agriculture")
}
Add_new_sector <- function(Product_sector = "All")
{
### Création des titres des lignes
Index_pond <-  data.frame("Ville" = factor(),
"Exports_imports" = factor(),
"Product_sector" = factor(),
"year" = integer(),
"Index_value" = numeric(),
"Part_value" = numeric(),
"Part_flux" = numeric())
for (Ville in c("Nantes", "Marseille", "Bordeaux", "La Rochelle", "Bayonne", "Rennes")) {
for (Type in c("Imports", "Exports")) {
### Calcul de l'index pour les paramètres choisis
Index <- Filter_calcul_index(Ville = Ville,  ### Choix du port d'étude
Exports_imports = Type, ### On conserve les Importations ou les Exportations
Product_sector = Product_sector)
### A jout de l'index et des parts de flux et de valeur dans le commerce total, ainsi que la valeur des paramètres
### au dataframe
for (i in seq(1,dim(Index)[1])) {
Index_pond <- Index_pond %>%
add_row(Ville = Ville,
Exports_imports = Type,
Product_sector = Product_sector,
year = Index$year[i],
Index_value = Index$Index[i],
Part_value = Index$Part_value[i],
Part_flux = Index$Part_flux[i])
}
}
}
### On charge les valeurs actuelles du csv
Index_res <- read.csv2("./scripts/Edouard/Composition_index_results.csv", row.names = NULL)
### On ajoute le nouveau dataframe
Index_res <- rbind(Index_res, Index_pond)
### On retire les lignes si elles sont déja présentes dans le csv
### Par défaut, le nouveau résultat met à jour le précédent
Index_res <- Index_res[!duplicated(Index_res[ , 1:7], fromLast = T), ]
### On écrit le résulat dans le csv
write.csv2(Index_res,
"./scripts/Edouard/Composition_index_results.csv",
row.names = F)
}
Add_new_sector("Primary goods")
### Nettoyage de l'espace de travail
rm(list = ls())
source("./scripts/Edouard/Indice_global_scripts/Indice_global_sans_filtre.R")
Sector_index_global_calcul <- function()
{
### Création des lignes du csv
Index_pond <-  data.frame("Exports_imports" = factor(),
"Product_sector" = factor(),
"year" = integer(),
"Index_value" = numeric(),
"Part_value" = numeric(),
"Part_flux" = numeric())
### Ecriture des lignes du csv
write.csv2(Index_pond,
"./scripts/Edouard/Composition_index_results_global.csv",
row.names = F)
### Ajout au csv de la baseline et de la baseline + changement d'un paramètre pour chaque paramètre
### à l'aide de la fonction Add_new_parma défini ci-dessous
Add_new_sector_global()
Add_new_sector_global("Manufactures")
Add_new_sector_global("Non-agricultural primary goods")
Add_new_sector_global("Agriculture")
Add_new_sector_global("Primary goods")
}
Add_new_sector_global <- function(Product_sector = "All")
{
### Création des titres des lignes
Index_pond <-  data.frame("Exports_imports" = factor(),
"Product_sector" = factor(),
"year" = integer(),
"Index_value" = numeric(),
"Part_value" = numeric(),
"Part_flux" = numeric())
for (Type in c("Imports", "Exports")) {
### Calcul de l'index pour les paramètres choisis
Index <- Filter_calcul_index(Exports_imports = Type, ### On conserve les Importations ou les Exportations
Product_sector = Product_sector)
### A jout de l'index et des parts de flux et de valeur dans le commerce total, ainsi que la valeur des paramètres
### au dataframe
for (i in seq(1,dim(Index)[1])) {
Index_pond <- Index_pond %>%
add_row(Exports_imports = Type,
Product_sector = Product_sector,
year = Index$year[i],
Index_value = Index$Index[i],
Part_value = Index$Part_value[i],
Part_flux = Index$Part_flux[i])
}
}
### On charge les valeurs actuelles du csv
Index_res <- read.csv2("./scripts/Edouard/Composition_index_results_global.csv", row.names = NULL)
### On ajoute le nouveau dataframe
Index_res <- rbind(Index_res, Index_pond)
### On retire les lignes si elles sont déja présentes dans le csv
### Par défaut, le nouveau résultat met à jour le précédent
Index_res <- Index_res[!duplicated(Index_res[ , 1:6], fromLast = T), ]
### On écrit le résulat dans le csv
write.csv2(Index_res,
"./scripts/Edouard/Composition_index_results_global.csv",
row.names = F)
}
Add_new_sector_global("Primary goods")
### A définir: emplacement du working directory
setwd("C:/Users/pignede/Documents/GitHub/toflit18_data")
### Nettoyage de l'espace de travail
rm(list = ls())
source("./scripts/Edouard/Indice_global_scripts/Indice_global_filtre_ville.R")
Sector_index_global_calcul <- function()
{
### Création des lignes du csv
Index_pond <-  data.frame("Exports_imports" = factor(),
"Product_sector" = factor(),
"year" = integer(),
"Index_value" = numeric(),
"Part_value" = numeric(),
"Part_flux" = numeric())
### Ecriture des lignes du csv
write.csv2(Index_pond,
"./scripts/Edouard/Composition_index_results_global.csv",
row.names = F)
### Ajout au csv de la baseline et de la baseline + changement d'un paramètre pour chaque paramètre
### à l'aide de la fonction Add_new_parma défini ci-dessous
Add_new_sector_global()
Add_new_sector_global("Manufactures")
Add_new_sector_global("Non-agricultural primary goods")
Add_new_sector_global("Agriculture")
Add_new_sector_global("Primary goods")
}
Add_new_sector_global <- function(Product_sector = "All")
{
### Création des titres des lignes
Index_pond <-  data.frame("Exports_imports" = factor(),
"Product_sector" = factor(),
"year" = integer(),
"Index_value" = numeric(),
"Part_value" = numeric(),
"Part_flux" = numeric())
for (Type in c("Imports", "Exports")) {
### Calcul de l'index pour les paramètres choisis
Index <- Filter_calcul_index(Exports_imports = Type, ### On conserve les Importations ou les Exportations
Product_sector = Product_sector)
### A jout de l'index et des parts de flux et de valeur dans le commerce total, ainsi que la valeur des paramètres
### au dataframe
for (i in seq(1,dim(Index)[1])) {
Index_pond <- Index_pond %>%
add_row(Exports_imports = Type,
Product_sector = Product_sector,
year = Index$year[i],
Index_value = Index$Index[i],
Part_value = Index$Part_value[i],
Part_flux = Index$Part_flux[i])
}
}
### On charge les valeurs actuelles du csv
Index_res <- read.csv2("./scripts/Edouard/Composition_index_results_global.csv", row.names = NULL)
### On ajoute le nouveau dataframe
Index_res <- rbind(Index_res, Index_pond)
### On retire les lignes si elles sont déja présentes dans le csv
### Par défaut, le nouveau résultat met à jour le précédent
Index_res <- Index_res[!duplicated(Index_res[ , 1:6], fromLast = T), ]
### On écrit le résulat dans le csv
write.csv2(Index_res,
"./scripts/Edouard/Composition_index_results_global.csv",
row.names = F)
}
Add_new_sector_global("Primary goods")
Index_composition <- read.csv2("./scripts/Edouard/Composition_index_results.csv", row.names = NULL)
Reg_trend_categ <- lm(log(Index_value) ~ year + Ville + Ville*year + Product_sector + Product_sector*year,
data = subset(Index_composition, Exports_imports == "Exports" & Product_sector %in% c("Manufactures", "Primary goods") & Ville != "Rennes"))
summary(Reg_trend_categ)
Reg_trend_categ <- lm(log(Index_value) ~ year + Ville + Ville*year + Product_sector + Product_sector*year,
data = subset(Index_composition, Exports_imports == "Imports" & Product_sector %in% c("Manufactures", "Primary goods") & Ville != "Rennes"))
summary(Reg_trend_categ)
Index_composition_global <- read.csv2("./scripts/Edouard/Composition_index_results_global.csv", row.names = NULL)
Reg_trend_categ_global <- lm(log(Index_value) ~ year + Product_sector + Product_sector*year ,
data = Index_composition_global)
summary(Reg_trend_categ_global)
data = subset(Index_composition_global, Product_sector %in% c("Manufactures", "Primary goods") & Exports_imports == "Imports")
Reg_trend_categ_global <- lm(log(Index_value) ~ year + Product_sector + Product_sector*year ,
data = subset(Index_composition_global, Product_sector %in% c("Manufactures", "Primary goods") & Exports_imports == "Imports"))
summary(Reg_trend_categ_global)
Reg_trend_categ_global <- lm(log(Index_value) ~ year + Product_sector + Product_sector*year ,
data = subset(Index_composition_global, Product_sector %in% c("Manufactures", "Primary goods") & Exports_imports == "Exports"))
summary(Reg_trend_categ_global)
Index_composition_global <- read.csv2("./scripts/Edouard/Composition_index_results_global.csv", row.names = NULL)
Terme_echange_pg <- Index_composition_global %>%
filter(Partner == "Primary goods") %>%
select(c("year", "Index_value", "Exports_imports")) %>%
spread(Exports_imports, Index_value) %>%
mutate(Exports = 100 * Exports / Exports[year == 1789],
Imports = 100 * Imports /Imports[year == 1789],
Terme_echange_pg = Exports / Imports)
Terme_echange_pg <- Index_composition_global %>%
filter(Product_sector == "Primary goods") %>%
select(c("year", "Index_value", "Exports_imports")) %>%
spread(Exports_imports, Index_value) %>%
mutate(Exports = 100 * Exports / Exports[year == 1789],
Imports = 100 * Imports /Imports[year == 1789],
Terme_echange_pg = Exports / Imports)
plot(drop_na(Terme_echange_pg[, c("year", "Terme_echange_pg")]), type = "o", pch = 19,
lwd = 2, col = "blue")
Index_composition_global <- read.csv2("./scripts/Edouard/Composition_index_results_global.csv", row.names = NULL)
Terme_echange_pg <- Index_composition_global %>%
filter(Product_sector == "Manufactures") %>%
select(c("year", "Index_value", "Exports_imports")) %>%
spread(Exports_imports, Index_value) %>%
mutate(Exports = 100 * Exports / Exports[year == 1789],
Imports = 100 * Imports /Imports[year == 1789],
Terme_echange_pg = Exports / Imports)
lines(drop_na(Terme_echange_pg[, c("year", "Terme_echange_pg")]), type = "o", pch = 19,
lwd = 2, col = "blue")
Index_composition_global <- read.csv2("./scripts/Edouard/Composition_index_results_global.csv", row.names = NULL)
Terme_echange_pg <- Index_composition_global %>%
filter(Product_sector == "Primary goods") %>%
select(c("year", "Index_value", "Exports_imports")) %>%
spread(Exports_imports, Index_value) %>%
mutate(Exports = 100 * Exports / Exports[year == 1789],
Imports = 100 * Imports /Imports[year == 1789],
Terme_echange_pg = Exports / Imports)
plot(drop_na(Terme_echange_pg[, c("year", "Terme_echange_pg")]), type = "o", pch = 19,
lwd = 2, col = "blue")
Index_composition_global <- read.csv2("./scripts/Edouard/Composition_index_results_global.csv", row.names = NULL)
Terme_echange_pg <- Index_composition_global %>%
filter(Product_sector == "Manufactures") %>%
select(c("year", "Index_value", "Exports_imports")) %>%
spread(Exports_imports, Index_value) %>%
mutate(Exports = 100 * Exports / Exports[year == 1789],
Imports = 100 * Imports /Imports[year == 1789],
Terme_echange_pg = Exports / Imports)
lines(drop_na(Terme_echange_pg[, c("year", "Terme_echange_pg")]), type = "o", pch = 19,
lwd = 2, col = "red")
Index_partner <- read.csv2("./scripts/Edouard/Partner_index_results.csv", row.names = NULL)
Index_partner <- Index_partner %>%
mutate_if(is.character, as.factor) %>%
mutate(Partner = relevel(Partner, "All"),
Exports_imports = relevel(Exports_imports, "Imports")) %>%
filter(Ville != "Rennes")
plot(Index_partner$year, Index_partner$Index_value, type = "o")
Reg_trend_categ <- lm(log(Index_value) ~ year + Ville + Ville*year + Partner + Partner*year,
data = subset(Index_partner, Exports_imports == "Exports" & Partner != "All"))
summary(Reg_trend_categ)
Reg_trend_categ <- lm(log(Index_value) ~ year + Ville + Ville*year + Partner + Partner*year,
data = subset(Index_partner, Exports_imports == "Imports" & Partner != "All"))
summary(Reg_trend_categ)
