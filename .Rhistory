library(sp)
library(sf)
library(rgdal)
library(gstat)
library(automap)
library(raster)
library(stringr)
library(spatialEco)
library(exactextractr)
library(ncdf4)
library(tidyverse)
library(ncdump)
library(sf)
library(lattice)
library(RColorBrewer)
library(parallel)
library(chirps)
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library(rdhs)
### Chargement de la carte du Snégal
Senegal <- ne_states(country = "Senegal", returnclass = "sp")
install.packages("rnaturalearthhires", repos = "http://packages.ropensci.org", type = "source")
library(sp)
library(sf)
library(rgdal)
library(gstat)
library(automap)
library(raster)
library(stringr)
library(spatialEco)
library(exactextractr)
library(ncdf4)
library(tidyverse)
library(ncdump)
library(sf)
library(lattice)
library(RColorBrewer)
library(parallel)
library(chirps)
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library("rnaturalearthhires")
library(rdhs)
rm(list = ls())
### On se connecte à ma session DHS
set_rdhs_config(email = "edouard.pignede@ird.fr",
project = "Senegal vulnerability to climate change")
### On selectionne le DHS chargé que l'on veut télécharger
### SN => Sénégal ; FL => Flat file :plus rapide ;HR => Household Recode ; KR => children's recode
datasets_HR <- dhs_datasets(countryIds = "SN",
surveyYear = "2019",
fileFormat = "FL",
fileType = "HR" )
datasets_KR <- dhs_datasets(countryIds = "SN",
surveyYear = "2019",
fileFormat = "FL",
fileType = "KR" )
datasets_IR <- dhs_datasets(countryIds = "SN",
surveyYear = "2019",
fileFormat = "FL",
fileType = "IR" )
### On le télécharge
downloads_HR <- get_datasets(datasets_HR$FileName)
downloads_KR <- get_datasets(datasets_KR$FileName)
downloads_IR <- get_datasets(datasets_IR$FileName)
### On le charge sur R
data_hous <- readRDS(downloads_HR$SNHR8AFL)
data_child <- readRDS(downloads_KR$SNKR8AFL)
data_women <- readRDS(downloads_IR$SNIR8AFL)
data_women$v106
library(dplyr)
library(plyr)
library(tidyverse)
library(stringr)
library(readr)
library(pracma)
library(IndexNumR)
library(hpiR)
library(dplyr)
library(tidyverse)
library(stringr)
library(readr)
library(pracma)
library(hpiR)
rm(list = ls())
### A définir
setwd("C:/Users/pignede/Documents/GitHub/toflit18_data")
### On charge la fonction de filtrage
source("./scripts/Edouard/Filtrage.R")
Data_filter <- Data_filtrage(Ville = "Nantes",  ### Choix du port d'étude
Outliers = F, ### conservation des outliers
Outliers_coef = 1.5, ### Quel niveau d'écart inter Q garde-t-on
Trans_number = 20, ### On retire les produits vendus moins de Trans_number fois
Exports_imports = "Imports", ### On conserve les Importations ou les Exportations
Prod_problems = T) ### Conserve-t-on les produits avec des différences de prix très importants
### Creation des colonnes de colonnes
Data_period <- dateToPeriod(trans_df = Data_filter,
date = 'Date',
periodicity = 'yearly')
### Création de la base de données des transactions considérées
Data_trans <- rtCreateTrans(trans_df = Data_period,
prop_id = "id_prod_simp",
trans_id = "id_trans",
price = "unit_price_metric",
min_period_dist = 0,
seq_only = T)
### Application du modèle
rt_model <- hpiModel(model_type = "rt",
hpi_df = Data_trans,
estimator = "weighted",
log_dep = T,
trim_model = T,
mod_spec = NULL)
### Calacul de l'indice
rt_index <- modelToIndex(rt_model)
rt_index$numeric <- rt_index$period
### Smooth index
smooth_index <- smoothIndex(rt_index,
order = 5,
in_place = T)
### Affichage du résultat
### Indice brut
plot(rt_index)
### Smooth index
plot(smooth_index, smooth = T)
table(Data_trans$period_1)
table(Data_filter$Date)
### On observe l'évolution des prix unitaires de tous les produits importés
### plus de xxxx fois sur la période
for (prod in levels(Data_filter$product_simplification)) {
Data_prod <- subset(Data_filter, product_simplification == prod)
if (dim(Data_prod)[1] > 20) {
print(Data_prod[, c("quantity_unit_metric", "unit_price_metric")])
plot(Data_prod$year, Data_prod$unit_price_metric, main = prod)
}
}
subset(Data_filter, prod_simplification == "fer-blanc")
subset(Data_filter, product_simplification == "fer-blanc")
Data_export <- Data_filter %>%
group_by(product_simplification) %>%
as.data.frame()
Data_export
Data_export <- Data_filter %>%
group_by(product_simplification) %>%
summarize(Trans_number = mean(trans_number)) %>%
as.data.frame()
Data_export
Data_export <- Data_filter %>%
group_by(product_simplification) %>%
summarize(Trans_number = mean(trans_number)) %>%
as.data.frame() %>%
mutate(Ville = "Nantes",
Type = "Imports")
Data_export
col_order(Data_export) <- c("Ville", "Type", "product_simplification")
Data_export[, c("Ville", "Type", "product_simplification")]
write.csv(Data_export, file = "C:/Users/pignede/Desktop", fileEncoding = "UTF-8")
write.csv(Data_export, file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme", fileEncoding = "UTF-8")
Data_export <- Data_export[, c("Ville", "Type", "product_simplification")]
write.csv(Data_export,
file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme",
fileEncoding = "UTF-8")
write.csv(Data_export,
fileEncoding = "UTF-8")
write.csv(Data_export,
file = "",
fileEncoding = "UTF-8")
write.csv(Data_export,
file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme/Data_export.csv",
fileEncoding = "UTF-8")
Data_filter <- Data_filtrage(Ville = "Nantes",  ### Choix du port d'étude
Outliers = F, ### conservation des outliers
Outliers_coef = 1.5, ### Quel niveau d'écart inter Q garde-t-on
Trans_number = 20, ### On retire les produits vendus moins de Trans_number fois
Exports_imports = "Exports", ### On conserve les Importations ou les Exportations
Prod_problems = T) ### Conserve-t-on les produits avec des différences de prix très importants
Data_export <- Data_filter %>%
group_by(product_simplification) %>%
summarize(Trans_number = mean(trans_number)) %>%
as.data.frame() %>%
mutate(Ville = "Nantes",
Type = "Imports")
Data_export <- Data_export[, c("Ville", "Type", "product_simplification")]
write.csv(Data_export,
file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme/Data_export.csv",
fileEncoding = "UTF-8")
write.csv(Data_export,
file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme/Data_export.csv",
fileEncoding = "UTF-8",
overwrite = T)
write.csv(Data_export,
file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme/Data_export.csv",
fileEncoding = "UTF-8",
overwrite = T)
write.csv(Data_export,
file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme/Data_export.csv",
fileEncoding = "UTF-8")
Data_export <- Data_filter %>%
group_by(product_simplification) %>%
summarize(Trans_number = mean(trans_number)) %>%
as.data.frame() %>%
mutate(Ville = "Nantes",
Type = "Exports")
Data_export <- Data_export[, c("Ville", "Type", "product_simplification")]
write.csv(Data_export,
file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme/Data_export.csv",
fileEncoding = "UTF-8")
write.csv(Data_export,
file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme/Data_export.csv",
fileEncoding = "UTF-8")
Data_filter <- Data_filtrage(Ville = "Marseille",  ### Choix du port d'étude
Outliers = F, ### conservation des outliers
Outliers_coef = 1.5, ### Quel niveau d'écart inter Q garde-t-on
Trans_number = 20, ### On retire les produits vendus moins de Trans_number fois
Exports_imports = "Imports", ### On conserve les Importations ou les Exportations
Prod_problems = T) ### Conserve-t-on les produits avec des différences de prix très importants
Data_filter <- Data_filtrage(Ville = "Nantes",  ### Choix du port d'étude
Outliers = F, ### conservation des outliers
Outliers_coef = 1.5, ### Quel niveau d'écart inter Q garde-t-on
Trans_number = 20, ### On retire les produits vendus moins de Trans_number fois
Exports_imports = "Imports", ### On conserve les Importations ou les Exportations
Prod_problems = T) ### Conserve-t-on les produits avec des différences de prix très importants
Data_export <- Data_filter %>%
group_by(product_simplification) %>%
summarize(Trans_number = mean(trans_number)) %>%
as.data.frame() %>%
mutate(Ville = "Nantes",
Type = "Imports")
Data_export <- Data_export[, c("Ville", "Type", "product_simplification")]
write.csv(Data_export,
file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme/Data_export.csv",
fileEncoding = "UTF-8")
Data_filter <- Data_filtrage(Ville = "Marseille",  ### Choix du port d'étude
Outliers = F, ### conservation des outliers
Outliers_coef = 1.5, ### Quel niveau d'écart inter Q garde-t-on
Trans_number = 20, ### On retire les produits vendus moins de Trans_number fois
Exports_imports = "Imports", ### On conserve les Importations ou les Exportations
Prod_problems = T) ### Conserve-t-on les produits avec des différences de prix très importants
Data_export <- Data_filter %>%
group_by(product_simplification) %>%
summarize(Trans_number = mean(trans_number)) %>%
as.data.frame() %>%
mutate(Ville = "Marseille",
Type = "Imports")
Data_export <- Data_export[, c("Ville", "Type", "product_simplification")]
write.csv(Data_export,
file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme/Data_export.csv",
fileEncoding = "UTF-8")
Data_filter <- Data_filtrage(Ville = "Marseille",  ### Choix du port d'étude
Outliers = F, ### conservation des outliers
Outliers_coef = 1.5, ### Quel niveau d'écart inter Q garde-t-on
Trans_number = 20, ### On retire les produits vendus moins de Trans_number fois
Exports_imports = "Exports", ### On conserve les Importations ou les Exportations
Prod_problems = T) ### Conserve-t-on les produits avec des différences de prix très importants
Data_export <- Data_filter %>%
group_by(product_simplification) %>%
summarize(Trans_number = mean(trans_number)) %>%
as.data.frame() %>%
mutate(Ville = "Marseille",
Type = "Exports")
Data_export <- Data_export[, c("Ville", "Type", "product_simplification")]
write.csv(Data_export,
file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme/Data_export.csv",
fileEncoding = "UTF-8")
Data_filter <- Data_filtrage(Ville = "La Rochelle",  ### Choix du port d'étude
Outliers = F, ### conservation des outliers
Outliers_coef = 1.5, ### Quel niveau d'écart inter Q garde-t-on
Trans_number = 20, ### On retire les produits vendus moins de Trans_number fois
Exports_imports = "Imports", ### On conserve les Importations ou les Exportations
Prod_problems = T) ### Conserve-t-on les produits avec des différences de prix très importants
Data_export <- Data_filter %>%
group_by(product_simplification) %>%
summarize(Trans_number = mean(trans_number)) %>%
as.data.frame() %>%
mutate(Ville = "La Rochelle",
Type = "Imports")
Data_export <- Data_export[, c("Ville", "Type", "product_simplification")]
write.csv(Data_export,
file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme/Data_export.csv",
fileEncoding = "UTF-8")
Data_filter <- Data_filtrage(Ville = "La Rochelle",  ### Choix du port d'étude
Outliers = F, ### conservation des outliers
Outliers_coef = 1.5, ### Quel niveau d'écart inter Q garde-t-on
Trans_number = 20, ### On retire les produits vendus moins de Trans_number fois
Exports_imports = "Exports", ### On conserve les Importations ou les Exportations
Prod_problems = T) ### Conserve-t-on les produits avec des différences de prix très importants
Data_export <- Data_filter %>%
group_by(product_simplification) %>%
summarize(Trans_number = mean(trans_number)) %>%
as.data.frame() %>%
mutate(Ville = "La Rochelle",
Type = "Exports")
Data_export <- Data_export[, c("Ville", "Type", "product_simplification")]
write.csv(Data_export,
file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme/Data_export.csv",
fileEncoding = "UTF-8")
Data_filter <- Data_filtrage(Ville = "Bordeaux",  ### Choix du port d'étude
Outliers = F, ### conservation des outliers
Outliers_coef = 1.5, ### Quel niveau d'écart inter Q garde-t-on
Trans_number = 20, ### On retire les produits vendus moins de Trans_number fois
Exports_imports = "Imports", ### On conserve les Importations ou les Exportations
Prod_problems = T) ### Conserve-t-on les produits avec des différences de prix très importants
Data_export <- Data_filter %>%
group_by(product_simplification) %>%
summarize(Trans_number = mean(trans_number)) %>%
as.data.frame() %>%
mutate(Ville = "Bordeaux",
Type = "Imports")
Data_export <- Data_export[, c("Ville", "Type", "product_simplification")]
write.csv(Data_export,
file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme/Data_export.csv",
fileEncoding = "UTF-8")
Data_filter <- Data_filtrage(Ville = "Bordeaux",  ### Choix du port d'étude
Outliers = F, ### conservation des outliers
Outliers_coef = 1.5, ### Quel niveau d'écart inter Q garde-t-on
Trans_number = 20, ### On retire les produits vendus moins de Trans_number fois
Exports_imports = "Exports", ### On conserve les Importations ou les Exportations
Prod_problems = T) ### Conserve-t-on les produits avec des différences de prix très importants
Data_export <- Data_filter %>%
group_by(product_simplification) %>%
summarize(Trans_number = mean(trans_number)) %>%
as.data.frame() %>%
mutate(Ville = "Bordeaux",
Type = "Exports")
Data_export <- Data_export[, c("Ville", "Type", "product_simplification")]
write.csv(Data_export,
file = "C:/Users/pignede/Dropbox (IRD)/IRD/Missions/Marchandises_18eme/Data_export.csv",
fileEncoding = "UTF-8")
