library(openxlsx)
library(hpiR)
### A définir: emplacement du working directory
setwd("C:/Users/pignede/Documents/GitHub/toflit18_data")
### A définir: emplacement du working directory
setwd("C:/Users/pignede/Documents/GitHub/toflit18_data")
### Nettoyage de l'espace de travail
rm(list = ls())
Calcul_correlation_matrix <- function()
{
### On charge les valeurs de Index_results.csv
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
### Création d'un workbook (objet comparable à un excel et converti en excel à la fin)
Cor_matrix_workbook <- createWorkbook()
### On récupère l'ensemble des villes du csv des indices
liste_ville <- unique(Index_res[ , 1])
for (Ville_cons in liste_ville) {
for (Type in c("Imports", "Exports")) {
### On récupère l'ensemble des configurations possibles avec les variables
Var_used <- unique(Index_res[ , 3:10])
### col_names est égal à la suite de l'ensemble des configurations possibles avec les variables
col_names <- c()
for (Row in seq(1, dim(Var_used)[1])) {
name <- c()
for (Col in 1:8) {
name <- paste(name, names(Var_used)[Col], ":", as.character(Var_used[Row, Col]), ";")
}
col_names <- c(col_names, name)
}
### Création de la matrice de corrélation les noms des lignes et des colonnes sont égales à col_names
Correlation_matrix <- matrix(nrow = dim(Var_used)[1], ncol = dim(Var_used)[1],
dimnames = list(col_names, col_names))
### Pour chaque configuration possible on calcule les corrélations 2 à 2 des indices
for (i in seq(1, dim(Var_used)[1])) {
for (j in seq(1, dim(Var_used)[1])) {
### Récupération de l'indice Configuration 1
Index1 <- Index_res %>%
filter(Ville == Ville_cons,
Exports_imports == Type,
Outliers == Var_used$Outliers[i],
Outliers_coef == Var_used$Outliers_coef[i],
Trans_number == Var_used$Trans_number[i],
Prod_problems == Var_used$Prod_problems[i],
Product_select == Var_used$Product_select[i],
Remove_double == Var_used$Remove_double[i],
Ponderation == Var_used$Ponderation[i],
Pond_log == Var_used$Pond_log[i]) %>%
select(c("year", "Index_value"))
### Récupération de l'indice configuration 2
Index2 <- Index_res %>%
filter(Ville == Ville_cons,
Exports_imports == Type,
Outliers == Var_used$Outliers[j],
Outliers_coef == Var_used$Outliers_coef[j],
Trans_number == Var_used$Trans_number[j],
Prod_problems == Var_used$Prod_problems[j],
Product_select == Var_used$Product_select[j],
Remove_double == Var_used$Remove_double[j],
Ponderation == Var_used$Ponderation[j],
Pond_log == Var_used$Pond_log[j]) %>%
select(c("year", "Index_value"))
### Calcul de la correlation
cor <- cor(Index1, Index2, use = "complete.obs")
### si les années sont bien comparables entre les indices (cor[1,1] > 0.99) alors on remplit la matrix de correlation
### sinon on met NA
if (cor[1,1] > 0.99) {
Correlation_matrix[i, j] = cor[2,2]
} else {
Correlation_matrix[i, j] = NA
}
}
}
### On crée un nouvel onglet ville type au workbook
addWorksheet(Cor_matrix_workbook, sheetName = paste(Ville_cons, Type))
### On ajoute la matrice de corrélation dans l'onglet ville type
writeData(Cor_matrix_workbook,
sheet = paste(Ville_cons, Type),
x = Correlation_matrix,
rowNames = T,
colNames = T)
}
}
### On sauvegarde le workbook dans l'excel Correlation_matrix.xlsx
saveWorkbook(Cor_matrix_workbook, "./scripts/Edouard/Correlation_matrix.xlsx",
overwrite = T)
}
Calcul_correlation_matrix_ville <- function()
{
### On charge les valeurs de Index_results.csv
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
### On conserve uniquement la baseline
Index_res_baseline <- Index_res %>%
filter(Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F)
### Création d'un workbook (objet comparable à un excel et converti en excel à la fin)
Cor_matrix_workbook <- createWorkbook()
### On récupère l'ensemble des villes du csv des indices
liste_ville <- unique(Index_res[ , 1])
for (Type in c("Imports", "Exports")) {
### Création de la matrice de corrélation les noms des lignes et des colonnes sont égales à col_names
Correlation_matrix <- matrix(nrow = length(liste_ville), ncol = length(liste_ville),
dimnames = list(liste_ville, liste_ville))
for (i in seq(1,length(liste_ville))) {
for (j in seq(1,length(liste_ville))) {
Index1 <- Index_res_baseline %>%
filter(Ville == liste_ville[i], Exports_imports == Type) %>%
select(c("year", "Index_value")) %>%
drop_na()
Index2 <- Index_res_baseline %>%
filter(Ville == liste_ville[j], Exports_imports == Type) %>%
select(c("year", "Index_value")) %>%
drop_na() %>%
filter(year %in% Index1$year)
Index1 <- Index1 %>% filter(year %in% Index2$year)
cor <- cor(Index1, Index2, use = "complete.obs")
if (cor[1,1] > 0.99) {
Correlation_matrix[i, j] = cor[2,2]
} else {
Correlation_matrix[i, j] = NA
}
}
}
### On crée un nouvel onglet ville type au workbook
addWorksheet(Cor_matrix_workbook, sheetName = paste(Type))
### On ajoute la matrice de corrélation dans l'onglet ville type
writeData(Cor_matrix_workbook,
sheet = paste(Type),
x = Correlation_matrix,
rowNames = T,
colNames = T)
}
### On sauvegarde le workbook dans l'excel Correlation_matrix.xlsx
saveWorkbook(Cor_matrix_workbook, "./scripts/Edouard/Correlation_matrix_ville.xlsx",
overwrite = T)
}
Calcul_correlation_matrix_ville()
### On charge les valeurs de Index_results.csv
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
### On conserve uniquement la baseline
Index_res_baseline <- Index_res %>%
filter(Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F)
### On récupère l'ensemble des villes du csv des indices
liste_ville <- unique(Index_res[ , 1])
i = 1
Type = "Imports"
Index1 <- Index_res_baseline %>%
filter(Ville == liste_ville[i], Exports_imports == Type) %>%
select(c("year", "Index_value")) %>%
filter(year >= 1760 & year <= 1789)
drop_na()
Index1 <- Index_res_baseline %>%
filter(Ville == liste_ville[i], Exports_imports == Type) %>%
select(c("year", "Index_value")) %>%
filter(year >= 1760 & year <= 1789) %>%
drop_na()
Index1
Index1 <- Index_res_baseline %>%
filter(Ville == liste_ville[i], Exports_imports == Type) %>%
select(c("year", "Index_value")) %>%
filter(year >= NULL & year <= NULL) %>%
drop_na()
j = 2
Index2 <- Index_res_baseline %>%
filter(Ville == liste_ville[j], Exports_imports == Type) %>%
select(c("year", "Index_value")) %>%
drop_na() %>%
filter(year %in% Index1$year)
Index1 <- Index1 %>% filter(year %in% Index2$year)
cor <- cor(Index1, Index2, use = "complete.obs")
cor
Calcul_correlation_matrix_ville <- function(year_deb = 1700, year_fin = 1900)
{
### On charge les valeurs de Index_results.csv
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
### On conserve uniquement la baseline
Index_res_baseline <- Index_res %>%
filter(Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F)
### Création d'un workbook (objet comparable à un excel et converti en excel à la fin)
Cor_matrix_workbook <- createWorkbook()
### On récupère l'ensemble des villes du csv des indices
liste_ville <- unique(Index_res[ , 1])
for (Type in c("Imports", "Exports")) {
### Création de la matrice de corrélation les noms des lignes et des colonnes sont égales à col_names
Correlation_matrix <- matrix(nrow = length(liste_ville), ncol = length(liste_ville),
dimnames = list(liste_ville, liste_ville))
for (i in seq(1,length(liste_ville))) {
for (j in seq(1,length(liste_ville))) {
Index1 <- Index_res_baseline %>%
filter(Ville == liste_ville[i], Exports_imports == Type) %>%
select(c("year", "Index_value")) %>%
filter(year >= year_deb & year <= year_fin)
drop_na()
Index2 <- Index_res_baseline %>%
filter(Ville == liste_ville[j], Exports_imports == Type) %>%
select(c("year", "Index_value")) %>%
drop_na() %>%
filter(year %in% Index1$year)
Index1 <- Index1 %>% filter(year %in% Index2$year)
cor <- cor(Index1, Index2, use = "complete.obs")
if (cor[1,1] > 0.99) {
Correlation_matrix[i, j] = cor[2,2]
} else {
Correlation_matrix[i, j] = NA
}
}
}
### On crée un nouvel onglet ville type au workbook
addWorksheet(Cor_matrix_workbook, sheetName = paste(Type))
### On ajoute la matrice de corrélation dans l'onglet ville type
writeData(Cor_matrix_workbook,
sheet = paste(Type),
x = Correlation_matrix,
rowNames = T,
colNames = T)
}
### On sauvegarde le workbook dans l'excel Correlation_matrix.xlsx
saveWorkbook(Cor_matrix_workbook, paste0("./scripts/Edouard/Correlation_matrix_ville",
year_deb, "_", year_fin,".xlsx"),
overwrite = T)
}
Calcul_correlation_matrix_ville(year_deb = 1700, year_fin = 1760)
Calcul_correlation_matrix_ville <- function(year_deb = 1700, year_fin = 1900)
{
### On charge les valeurs de Index_results.csv
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
### On conserve uniquement la baseline
Index_res_baseline <- Index_res %>%
filter(Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F)
### Création d'un workbook (objet comparable à un excel et converti en excel à la fin)
Cor_matrix_workbook <- createWorkbook()
### On récupère l'ensemble des villes du csv des indices
liste_ville <- unique(Index_res[ , 1])
for (Type in c("Imports", "Exports")) {
### Création de la matrice de corrélation les noms des lignes et des colonnes sont égales à col_names
Correlation_matrix <- matrix(nrow = length(liste_ville), ncol = length(liste_ville),
dimnames = list(liste_ville, liste_ville))
for (i in seq(1,length(liste_ville))) {
for (j in seq(1,length(liste_ville))) {
Index1 <- Index_res_baseline %>%
filter(Ville == liste_ville[i], Exports_imports == Type) %>%
select(c("year", "Index_value")) %>%
filter(year >= year_deb & year <= year_fin) %>%
drop_na()
Index2 <- Index_res_baseline %>%
filter(Ville == liste_ville[j], Exports_imports == Type) %>%
select(c("year", "Index_value")) %>%
drop_na() %>%
filter(year %in% Index1$year)
Index1 <- Index1 %>% filter(year %in% Index2$year)
cor <- cor(Index1, Index2, use = "complete.obs")
if (cor[1,1] > 0.99) {
Correlation_matrix[i, j] = cor[2,2]
} else {
Correlation_matrix[i, j] = NA
}
}
}
### On crée un nouvel onglet ville type au workbook
addWorksheet(Cor_matrix_workbook, sheetName = paste(Type))
### On ajoute la matrice de corrélation dans l'onglet ville type
writeData(Cor_matrix_workbook,
sheet = paste(Type),
x = Correlation_matrix,
rowNames = T,
colNames = T)
}
### On sauvegarde le workbook dans l'excel Correlation_matrix.xlsx
saveWorkbook(Cor_matrix_workbook, paste0("./scripts/Edouard/Correlation_matrix_ville",
year_deb, "_", year_fin,".xlsx"),
overwrite = T)
}
Calcul_correlation_matrix_ville(year_deb = 1700, year_fin = 1760)
Calcul_correlation_matrix_ville(year_deb = 1750, year_fin = 1900)
install.packages("corrplot")
library(corrplot)
Cor_ville_Imports_1700_1760 <- openxlsx::read.xlsx("./scripts/Edouard/Correlation_matrix_ville1700_1760.xlsx",
sheet = "Imports")
Cor_ville_Imports_1700_1760 <- openxlsx::read.xlsx("./scripts/Edouard/Correlation_matrix_ville1700_1760.xlsx",
sheet = "Imports", rowNames = T)
Cor_ville_Imports_1700_1760
corrplot(Cor_ville_Imports_1700_1760, type = "upper")
Cor_ville_Imports_1700_1760 <- as.matrix(openxlsx::read.xlsx("./scripts/Edouard/Correlation_matrix_ville1700_1760.xlsx",
sheet = "Imports", rowNames = T))
corrplot(Cor_ville_Imports_1700_1760, type = "upper")
corrplot(Cor_ville_Imports_1700_1760, type = "upper", diag = F,
outline = T)
corrplot(Cor_ville_Imports_1700_1760, type = "upper", diag = F,
outline = T, tl.col = "black")
corrplot(Cor_ville_Imports_1700_1760, type = "upper", diag = F,
outline = T, tl.col = "black", tl.srt = 0)
corrplot(Cor_ville_Imports_1700_1760, type = "upper", diag = F,
outline = T, tl.col = "black", tl.srt = 45)
Cor_ville_Imports_1750_1900 <- as.matrix(openxlsx::read.xlsx("./scripts/Edouard/Correlation_matrix_ville1750_1900.xlsx",
sheet = "Imports", rowNames = T))
corrplot(Cor_ville_Imports_1750_1900, type = "upper", diag = F,
outline = T, tl.col = "black", tl.srt = 45)
Cor_ville_Imports_1700_1760 <- as.matrix(openxlsx::read.xlsx("./scripts/Edouard/Correlation_matrix_ville1700_1760.xlsx",
sheet = "Exports", rowNames = T))
corrplot(Cor_ville_Imports_1700_1760, type = "upper", diag = F,
outline = T, tl.col = "black", tl.srt = 45)
Cor_ville_Imports_1750_1900 <- as.matrix(openxlsx::read.xlsx("./scripts/Edouard/Correlation_matrix_ville1750_1900.xlsx",
sheet = "Exports", rowNames = T))
corrplot(Cor_ville_Imports_1750_1900, type = "upper", diag = F,
outline = T, tl.col = "black", tl.srt = 45)
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
Index_res <- Index_res %>%
select(c("Ville", "Exports_imports", "year", "Index_value", "Part_value"))
Index_res_villes <- pivot_wider(Index_res, names_from = "Ville",
values_from = c("Index_value", "Part_value"))
Index_res_villes
Index_res_villes$Index_value_Nantes
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
Index_res <- Index_res %>%
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("Ville", "Exports_imports", "year", "Index_value", "Part_value"))
Index_res <- Index_res %>%
Index_res <- Index_res %>%
filter(Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("Ville", "Exports_imports", "year", "Index_value", "Part_value"))
Index_res <- Index_res %>%
filter(Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("Ville", "Exports_imports", "year", "Index_value", "Part_value"))
Index_res_villes <- pivot_wider(Index_res, names_from = "Ville",
values_from = c("Index_value", "Part_value"))
Index_res_villes
View(Index_res_villes)
Index_res <- Index_res %>%
filter(Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("Ville", "Exports_imports", "year", "Index_value", "Part_value")) %>%
filter(Ville != "Rennes")
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
Index_res <- Index_res %>%
filter(Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("Ville", "Exports_imports", "year", "Index_value", "Part_value")) %>%
filter(Ville != "Rennes")
Index_res_villes <- pivot_wider(Index_res, names_from = "Ville",
values_from = c("Index_value", "Part_value"))
View(Index_res_villes)
Index_res_villes_Imports <- Index_res_villes %>%
filter(Exports_imports == "Imports") %>%
arrange(year)
View(Index_res_villes)
View(Index_res_villes_Imports)
Index_res_villes_Imports <- Index_res_villes %>%
filter(Exports_imports == "Imports") %>%
select(-c("Imports")) %>%
arrange(year)
Index_res_villes_Imports <- Index_res_villes %>%
filter(Exports_imports == "Imports") %>%
select(-c("Exports_imports")) %>%
arrange(year)
View(Index_res_villes_Imports)
Index_res_villes_Imports[ , 1789]
Index_res_villes_Imports[ , "1789"]
Index_res_villes_Imports[ , -1]
Index_res_villes_Imports[ -1,]
Index_res_villes_Imports[ ,72]
Index_res_villes_Imports[ 72,]
Index_res_villes_Imports[year == 1789,]
Index_res_villes_Imports[year == 1789
]
Index_res_villes_Imports[,year == 1789]
Index_res_villes_Imports[Index_res_villes_Imports$year == 1789]
Index_res_villes_Imports[Index_res_villes_Imports$year == 1789,]
Index_res_villes_Imports <- Index_res_villes_Imports %>%
mutate(across(starts_with("Index_value"), function(x){return(x/x[-1])}))
View(Index_res_villes_Imports)
Index_res_villes_Imports <- Index_res_villes %>%
filter(Exports_imports == "Imports") %>%
select(-c("Exports_imports")) %>%
arrange(year)
View(Index_res_villes_Imports)
View(Index_res_villes_Imports)
Index_res_villes_Imports <- Index_res_villes_Imports %>%
mutate(across(starts_with("Index_value"), function(x){return(100*x/x[-1])}))
View(Index_res_villes_Imports)
x = [1,2,1,2,3,4,6]
x = c(1,2,1,2,3,4,6)
x/x[-1]
x[-1]
Index_res_villes_Imports <- Index_res_villes %>%
filter(Exports_imports == "Imports") %>%
select(-c("Exports_imports")) %>%
arrange(year)
Index_res_villes_Imports <- Index_res_villes_Imports %>%
mutate(across(starts_with("Index_value"), function(x){return(100*x/x[length(x)])}))
View(Index_res_villes_Imports)
plot(Index_res_villes_Imports$year, Index_res_villes_Imports$Index_value_Nantes)
lines(Index_res_villes_Imports$year, Index_res_villes_Imports$Index_value_Marseille)
lines(Index_res_villes_Imports$year, Index_res_villes_Imports$Index_value_Bordeaux)
lines(Index_res_villes_Imports$year, Index_res_villes_Imports$`Index_value_La Rochelle`)
plot(Index_res_villes_Imports$year, Index_res_villes_Imports$Index_value_Nantes, type = "o")
plot(Index_res_villes_Imports$year, Index_res_villes_Imports$Index_value_Nantes, type = "o")
lines(Index_res_villes_Imports$year, Index_res_villes_Imports$Index_value_Marseille)
lines(Index_res_villes_Imports$year, Index_res_villes_Imports$Index_value_Bordeaux)
lines(Index_res_villes_Imports$year, Index_res_villes_Imports$`Index_value_La Rochelle`)
lines(Index_res_villes_Imports$year, Index_res_villes_Imports$Index_value_Bayonne)
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]))
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "o")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Marseille")]), type = "o")
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "o")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Marseille")]), type = "o")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bordeaux")]), type = "o")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_La Rochelle")]), type = "o")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bayonne")]), type = "o")
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "o", col = "black")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Marseille")]), type = "o", col = "red")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bordeaux")]), type = "o", col = "blue")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_La Rochelle")]), type = "o", col = "green")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bayonne")]), type = "o", col = "orange")
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "o", col = "black", ylim = c(0,160))
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Marseille")]), type = "o", col = "red")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bordeaux")]), type = "o", col = "blue")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_La Rochelle")]), type = "o", col = "green")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bayonne")]), type = "o", col = "orange")
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "o", col = "black", ylim = c(20,120))
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Marseille")]), type = "o", col = "red")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bordeaux")]), type = "o", col = "blue")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_La Rochelle")]), type = "o", col = "green")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bayonne")]), type = "o", col = "orange")
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "o", col = "black", ylim = c(15,115))
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Marseille")]), type = "o", col = "red")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bordeaux")]), type = "o", col = "blue")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_La Rochelle")]), type = "o", col = "green")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bayonne")]), type = "o", col = "orange")
Cor_ville_Imports_1700_1760 <- as.matrix(openxlsx::read.xlsx("./scripts/Edouard/Correlation_matrix_ville1700_1760.xlsx",
sheet = "Imports", rowNames = T))
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "o", col = "black", ylim = c(18,118))
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Marseille")]), type = "o", col = "red")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bordeaux")]), type = "o", col = "blue")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_La Rochelle")]), type = "o", col = "green")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bayonne")]), type = "o", col = "orange")
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "b", col = "black", ylim = c(18,118))
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "c", col = "black", ylim = c(18,118))
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "o", col = "black", ylim = c(18,118))
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "o", col = "black", ylim = c(18,118), pch = 4)
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "o", col = "black", ylim = c(18,118), pch = 19)
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "o", col = "black", ylim = c(18,118), pch = 19, lwd = 2)
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "o", col = "black", ylim = c(18,118), pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Marseille")]), type = "o", col = "red", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bordeaux")]), type = "o", col = "blue", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_La Rochelle")]), type = "o", col = "green", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bayonne")]), type = "o", col = "orange", pch = 19, lwd = 2)
legend("topleft", legend = c("Nantes", "Marseille", "Bordeaux", "La Rochelle", "Bayonne"),
col = c("black", "red", "blue", "green", "orange"))
legend("topleft", legend = c("Nantes", "Marseille", "Bordeaux", "La Rochelle", "Bayonne"),
col = c("black", "red", "blue", "green", "orange"), lwd = 2)
Index_res_villes_Exports <- Index_res_villes %>%
filter(Exports_imports == "Exports") %>%
select(-c("Exports_imports")) %>%
arrange(year)
Index_res_villes_Exports <- Index_res_villes_Exports %>%
mutate(across(starts_with("Index_value"), function(x){return(100*x/x[length(x)])}))
plot(drop_na(Index_res_villes_Exports[c("year", "Index_value_Nantes")]), type = "o", col = "black", ylim = c(18,118), pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Exports[c("year", "Index_value_Marseille")]), type = "o", col = "red", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Exports[c("year", "Index_value_Bordeaux")]), type = "o", col = "blue", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Exports[c("year", "Index_value_La Rochelle")]), type = "o", col = "green", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Exports[c("year", "Index_value_Bayonne")]), type = "o", col = "orange", pch = 19, lwd = 2)
legend("topleft", legend = c("Nantes", "Marseille", "Bordeaux", "La Rochelle", "Bayonne"),
col = c("black", "red", "blue", "green", "orange"), lwd = 2)
plot(drop_na(Index_res_villes_Exports[c("year", "Index_value_Nantes")]), type = "o", col = "black", ylim = c(50,120), pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Exports[c("year", "Index_value_Marseille")]), type = "o", col = "red", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Exports[c("year", "Index_value_Bordeaux")]), type = "o", col = "blue", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Exports[c("year", "Index_value_La Rochelle")]), type = "o", col = "green", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Exports[c("year", "Index_value_Bayonne")]), type = "o", col = "orange", pch = 19, lwd = 2)
plot(drop_na(Index_res_villes_Exports[c("year", "Index_value_Nantes")]), type = "o", col = "black", ylim = c(50,120),
pch = 19, lwd = 2, ylab = "Valeur des indices de prix", xlab = "Année")
lines(drop_na(Index_res_villes_Exports[c("year", "Index_value_Marseille")]), type = "o", col = "red", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Exports[c("year", "Index_value_Bordeaux")]), type = "o", col = "blue", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Exports[c("year", "Index_value_La Rochelle")]), type = "o", col = "green", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Exports[c("year", "Index_value_Bayonne")]), type = "o", col = "orange", pch = 19, lwd = 2)
legend("topleft", legend = c("Nantes", "Marseille", "Bordeaux", "La Rochelle", "Bayonne"),
col = c("black", "red", "blue", "green", "orange"), lwd = 2)
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "o", col = "black", ylim = c(18,118),
pch = 19, lwd = 2, ylab = "Valeur des indices de prix", xlab = "Année")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Marseille")]), type = "o", col = "red", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bordeaux")]), type = "o", col = "blue", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_La Rochelle")]), type = "o", col = "green", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bayonne")]), type = "o", col = "orange", pch = 19, lwd = 2)
legend("topleft", legend = c("Nantes", "Marseille", "Bordeaux", "La Rochelle", "Bayonne"),
col = c("black", "red", "blue", "green", "orange"), lwd = 2)
plot(drop_na(Index_res_villes_Imports[c("year", "Index_value_Nantes")]), type = "o", col = "black", ylim = c(18,118),
pch = 19, lwd = 2, ylab = "Valeur des indices de prix", xlab = "Année", main = "Indice de prix - Imports")
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Marseille")]), type = "o", col = "red", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bordeaux")]), type = "o", col = "blue", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_La Rochelle")]), type = "o", col = "green", pch = 19, lwd = 2)
lines(drop_na(Index_res_villes_Imports[c("year", "Index_value_Bayonne")]), type = "o", col = "orange", pch = 19, lwd = 2)
legend("topleft", legend = c("Nantes", "Marseille", "Bordeaux", "La Rochelle", "Bayonne"),
col = c("black", "red", "blue", "green", "orange"), lwd = 2)
Cor_ville_Imports_1700_1760 <- as.matrix(openxlsx::read.xlsx("./scripts/Edouard/Correlation_matrix_ville1700_1760.xlsx",
sheet = "Imports", rowNames = T))
corrplot(Cor_ville_Imports_1700_1760, type = "upper", diag = F,
outline = T, tl.col = "black", tl.srt = 45)
Cor_ville_Imports_1750_1900 <- as.matrix(openxlsx::read.xlsx("./scripts/Edouard/Correlation_matrix_ville1750_1900.xlsx",
sheet = "Imports", rowNames = T))
corrplot(Cor_ville_Imports_1750_1900, type = "upper", diag = F,
outline = T, tl.col = "black", tl.srt = 45)
Cor_ville_Imports <- as.matrix(openxlsx::read.xlsx("./scripts/Edouard/Correlation_matrix_ville.xlsx",
sheet = "Imports", rowNames = T))
corrplot(Cor_ville_Imports, type = "upper", diag = F,
outline = T, tl.col = "black", tl.srt = 45)
Cor_ville_Exports <- as.matrix(openxlsx::read.xlsx("./scripts/Edouard/Correlation_matrix_ville.xlsx",
sheet = "Exports", rowNames = T))
corrplot(Cor_ville_Exports, type = "upper", diag = F,
outline = T, tl.col = "black", tl.srt = 45)
