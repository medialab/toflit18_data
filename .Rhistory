print(Table_trend)
print(Table_trend_duree)
}
Index_reg_trend
for (model in Index_reg_trend) {
print(model$coefficients)
}
for (model in Index_reg_trend) {
print(model$coefficients[2])
}
Index_reg_trend$trend_Marseille_Exports$model
Index_reg_trend$trend_Marseille_Exports$effects
Index_reg_trend$trend_Marseille_Exports$terms
Index_reg_trend$trend_Marseille_Exports$coefficients
Index_reg_trend$trend_Marseille_Exports$coefficients[2,2]
length(Index_reg_trend)
model1 = 1
diag(vcov(Index_reg_trend[[model1]])
)
for (model1 in length(Index_reg_trend)) {
for (model2 in length(Index_reg_trend)) {
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = c(names(Index_reg_trend), names(Index_reg_trend)))
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[2] - Index_reg_trend[[model2]]$coefficients[2]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[2] + diag(vcov(Index_reg_trend[[model2]]))[2])
}
}
for (model1 in length(Index_reg_trend)) {
for (model2 in length(Index_reg_trend)) {
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[2] - Index_reg_trend[[model2]]$coefficients[2]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[2] + diag(vcov(Index_reg_trend[[model2]]))[2])
}
}
dmatrix_coefficient_test
matrix_coefficient_test
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[2] - Index_reg_trend[[model2]]$coefficients[2]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[2] + diag(vcov(Index_reg_trend[[model2]]))[2])
}
}
matrix_coefficient_test
seq(1,length(Index_reg_trend))
seq(1, length(Index_reg_trend))
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[2] - Index_reg_trend[[model2]]$coefficients[2]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[2] + diag(vcov(Index_reg_trend[[model2]]))[2])
}
}
matrix_coefficient_test
model1 = 1
model2 = 2
(Index_reg_trend[[model1]]$coefficients[2] - Index_reg_trend[[model2]]$coefficients[2]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[2] + diag(vcov(Index_reg_trend[[model2]]))[2])
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[2] - Index_reg_trend[[model2]]$coefficients[2]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[2] + diag(vcov(Index_reg_trend[[model2]]))[2])
matrix_coefficient_test
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[2] - Index_reg_trend[[model2]]$coefficients[2]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[2] + diag(vcov(Index_reg_trend[[model2]]))[2])
}
}
matrix_coefficient_test
for (Type in c("Imports", "Exports")) {
Index_reg_trend <- list()
Index_reg_trend_duree <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Index <- Recuperation_Index_port(Port = Port, Type = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index_value) ~ year + War_non_ter,
weight = Part_value, data = Index)
trend_duree <- lm(log(Index_value) ~ year + War_non_ter + War_duree_non_ter,
weight = Part_value, data = Index)
Index_reg_trend[[paste0("trend_", Port, "_", Type)]] = trend
Index_reg_trend_duree[[paste0("trendduree_", Port, "_", Type)]] = trend_duree
}
Table_trend = export_summs(Index_reg_trend, error.pos = "right",
model.names = names(Index_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = paste0("./scripts/Edouard/Regression_results/Regression_results_trend_", Type, ".xlsx"),
digits = 4)
Table_trend_duree = export_summs(Index_reg_trend_duree, error.pos = "right",
model.names = names(Index_reg_trend_duree),
error_pos = "right",
to.file = "xlsx",
file.name = paste0("./scripts/Edouard/Regression_results/Regression_results_trend_duree", Type, ".xlsx"),
digits = 4)
print(Table_trend)
print(Table_trend_duree)
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[2] - Index_reg_trend[[model2]]$coefficients[2]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[2] + diag(vcov(Index_reg_trend[[model2]]))[2])
}
}
print(matrix_coefficient_test)
}
for (Type in c("Imports", "Exports")) {
Index_reg_trend <- list()
Index_reg_trend_duree <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Index <- Recuperation_Index_port(Port = Port, Type = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index_value) ~  War_non_ter,
weight = Part_value, data = Index)
trend_duree <- lm(log(Index_value) ~ War_non_ter + War_duree_non_ter,
weight = Part_value, data = Index)
Index_reg_trend[[paste0("trend_", Port, "_", Type)]] = trend
Index_reg_trend_duree[[paste0("trendduree_", Port, "_", Type)]] = trend_duree
}
Table_trend = export_summs(Index_reg_trend, error.pos = "right",
model.names = names(Index_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = paste0("./scripts/Edouard/Regression_results/Regression_results_trend_", Type, ".xlsx"),
digits = 4)
Table_trend_duree = export_summs(Index_reg_trend_duree, error.pos = "right",
model.names = names(Index_reg_trend_duree),
error_pos = "right",
to.file = "xlsx",
file.name = paste0("./scripts/Edouard/Regression_results/Regression_results_trend_duree", Type, ".xlsx"),
digits = 4)
print(Table_trend)
print(Table_trend_duree)
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[2] - Index_reg_trend[[model2]]$coefficients[2]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[2] + diag(vcov(Index_reg_trend[[model2]]))[2])
}
}
print(matrix_coefficient_test)
}
Termes_reg_trend <- list()
Termes_reg_trend_duree <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Termes_echange <- Recuperation_termes_echange(Port = Port)
Termes_echange <- merge(Termes_echange, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Termes_echange_value) ~ War_non_ter, data = Termes_echange)
trend_duree <- lm(log(Termes_echange_value) ~ War_non_ter + War_duree_non_ter, data = Termes_echange)
Termes_reg_trend[[paste0("trend_", Port, "_")]] = trend
Termes_reg_trend_duree[[paste0("trend_duree_", Port, "_")]] = trend_duree
#
#
# Table = export_summs(trend, trend_duree, error.pos = "right",
#                      model.names = c("Simple_trend", "dureeratic_trend"),
#                      error_pos = "right")
}
Table_trend = export_summs(Termes_reg_trend, error.pos = "right",
model.names = names(Termes_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_results_termes_echange_trend.xlsx",
digits = 4)
Table_trend_duree = export_summs(Termes_reg_trend_duree, error.pos = "right",
model.names = names(Termes_reg_trend_duree),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_results_termes_echange_trend_duree.xlsx",
digits = 4)
print(Table_trend)
Regression_global <- list()
for (Type in c("Imports", "Exports")) {
for (Filtre_ville in c(TRUE, FALSE)) {
Index <- Recuperation_Index_global(Filtre_ville = Filtre_ville, Exports_imports = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index) ~ War_non_ter + War_duree_non_ter,
weight = Part_value_national, data = Index)
if (Type == "Imports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Imports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Imports_sans_filtre")]] = trend
}
}
if (Type == "Exports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Exports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Exports_sans_filtre")]] = trend
}
}
}
}
Table = export_summs(Regression_global, error.pos = "right",
model.names = names(Regression_global),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_global.xlsx",
digits = 4)
for (Type in c("Imports", "Exports")) {
Index_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Index <- Recuperation_Index_port(Port = Port, Type = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index_value) ~  year + War_var + War_duree,
weight = Part_value, data = Index)
Index_reg_trend[[paste0("trend_", Port, "_", Type)]] = trend
}
Table_trend = export_summs(Index_reg_trend, error.pos = "right",
model.names = names(Index_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = paste0("./scripts/Edouard/Regression_results/Regression_results_trend_", Type, ".xlsx"),
digits = 4)
print(Table_trend)
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
Coef = 2
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[Coef] - Index_reg_trend[[model2]]$coefficients[Coef]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[Coef] + diag(vcov(Index_reg_trend[[model2]]))[Coef])
}
}
print(matrix_coefficient_test)
}
Regression_global <- list()
for (Type in c("Imports", "Exports")) {
for (Filtre_ville in c(TRUE, FALSE)) {
Index <- Recuperation_Index_global(Filtre_ville = Filtre_ville, Exports_imports = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index) ~ year + War_var + War_duree,
weight = Part_value_national, data = Index)
if (Type == "Imports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Imports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Imports_sans_filtre")]] = trend
}
}
if (Type == "Exports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Exports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Exports_sans_filtre")]] = trend
}
}
}
}
Table = export_summs(Regression_global, error.pos = "right",
model.names = names(Regression_global),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_global.xlsx",
digits = 4)
Regression_global <- list()
for (Type in c("Imports", "Exports")) {
for (Filtre_ville in c(TRUE, FALSE)) {
Index <- Recuperation_Index_global(Filtre_ville = Filtre_ville, Exports_imports = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index) ~ year + War_non_ter + War_non_ter_duree,
weight = Part_value_national, data = Index)
if (Type == "Imports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Imports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Imports_sans_filtre")]] = trend
}
}
if (Type == "Exports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Exports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Exports_sans_filtre")]] = trend
}
}
}
}
Regression_global <- list()
for (Type in c("Imports", "Exports")) {
for (Filtre_ville in c(TRUE, FALSE)) {
Index <- Recuperation_Index_global(Filtre_ville = Filtre_ville, Exports_imports = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index) ~ year + War_non_ter + War_duree_non_ter,
weight = Part_value_national, data = Index)
if (Type == "Imports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Imports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Imports_sans_filtre")]] = trend
}
}
if (Type == "Exports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Exports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Exports_sans_filtre")]] = trend
}
}
}
}
Table = export_summs(Regression_global, error.pos = "right",
model.names = names(Regression_global),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_global.xlsx",
digits = 4)
Regression_global <- list()
for (Type in c("Imports", "Exports")) {
for (Filtre_ville in c(TRUE, FALSE)) {
Index <- Recuperation_Index_global(Filtre_ville = Filtre_ville, Exports_imports = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index) ~ year + War_non_ter + War_duree_non_ter,
weight = Part_value_national, data = Index)
if (Type == "Imports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Imports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Imports_sans_filtre")]] = trend
}
}
if (Type == "Exports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Exports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Exports_sans_filtre")]] = trend
}
}
}
}
Table = export_summs(Regression_global, error.pos = "right",
model.names = names(Regression_global),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_global.xlsx",
digits = 4)
Regression_global <- list()
for (Type in c("Imports", "Exports")) {
for (Filtre_ville in c(TRUE, FALSE)) {
Index <- Recuperation_Index_global(Filtre_ville = Filtre_ville, Exports_imports = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index) ~ year + War_non_ter,
weight = Part_value_national, data = Index)
if (Type == "Imports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Imports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Imports_sans_filtre")]] = trend
}
}
if (Type == "Exports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Exports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Exports_sans_filtre")]] = trend
}
}
}
}
Table = export_summs(Regression_global, error.pos = "right",
model.names = names(Regression_global),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_global.xlsx",
digits = 4)
print(Table)
Table = export_summs(Regression_global, error.pos = "right",
model.names = names(Regression_global),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_global.xlsx",
digits = 4)
Regression_global <- list()
for (Type in c("Imports", "Exports")) {
for (Filtre_ville in c(TRUE, FALSE)) {
Index <- Recuperation_Index_global(Filtre_ville = Filtre_ville, Exports_imports = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index) ~ year + War_duree_non_ter,
weight = Part_value_national, data = Index)
if (Type == "Imports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Imports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Imports_sans_filtre")]] = trend
}
}
if (Type == "Exports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Exports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Exports_sans_filtre")]] = trend
}
}
}
}
Table = export_summs(Regression_global, error.pos = "right",
model.names = names(Regression_global),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_global.xlsx",
digits = 4)
Table = export_summs(Regression_global, error.pos = "right",
model.names = names(Regression_global),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_global.xlsx",
digits = 4)
export_summs(Regression_global, error.pos = "right",
model.names = names(Regression_global),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_global.xlsx",
digits = 4)
Table = export_summs(Regression_global, error.pos = "right",
model.names = names(Regression_global),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_global.xlsx",
digits = 4)
Regression_global <- list()
for (Type in c("Imports", "Exports")) {
for (Filtre_ville in c(TRUE, FALSE)) {
Index <- Recuperation_Index_global(Filtre_ville = Filtre_ville, Exports_imports = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index) ~ year + War_duree_non_ter,
weight = Part_value_national, data = Index)
if (Type == "Imports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Imports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Imports_sans_filtre")]] = trend
}
}
if (Type == "Exports") {
if (Filtre_ville) {
Regression_global[[paste0("trend_Exports_Filtre_ville")]] = trend
} else {
Regression_global[[paste0("trend_Exports_sans_filtre")]] = trend
}
}
}
}
Table = export_summs(Regression_global, error.pos = "right",
model.names = names(Regression_global),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_global.xlsx",
digits = 4)
Table = export_summs(Regression_global, error.pos = "right",
model.names = names(Regression_global),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_global.xlsx",
digits = 4)
for (Type in c("Imports", "Exports")) {
Index_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Index <- Recuperation_Index_port(Port = Port, Type = Type)
Index <- merge(Index, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Index_value) ~  year,
weight = Part_value, data = Index)
Index_reg_trend[[paste0("trend_", Port, "_", Type)]] = trend
}
Table_trend = export_summs(Index_reg_trend, error.pos = "right",
model.names = names(Index_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = paste0("./scripts/Edouard/Regression_results/Regression_results_trend_", Type, ".xlsx"),
digits = 4)
print(Table_trend)
matrix_coefficient_test <- matrix(nrow = length(Index_reg_trend), ncol = length(Index_reg_trend),
dimnames = list(names(Index_reg_trend), names(Index_reg_trend)))
Coef = 2
for (model1 in seq(1,length(Index_reg_trend))) {
for (model2 in seq(1, length(Index_reg_trend))) {
matrix_coefficient_test[model1, model2] = (Index_reg_trend[[model1]]$coefficients[Coef] - Index_reg_trend[[model2]]$coefficients[Coef]) /
sqrt(diag(vcov(Index_reg_trend[[model1]]))[Coef] + diag(vcov(Index_reg_trend[[model2]]))[Coef])
}
}
print(matrix_coefficient_test)
}
