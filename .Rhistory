Termes_echange_res <- Index_res_reshape %>%
### Calcul du termes de l'échange
mutate(Termes_echange_value = Exports / Imports) %>%
### On conserve uniquement les colonnes d'intérêt
select("Ville", "year", "Termes_echange_value") %>%
mutate_if(is.character, as.factor)
### Nettoyage de l'espace de travail
rm(list = ls())
### A définir: emplacement du working directory
setwd("C:/Users/pignede/Documents/GitHub/toflit18_data")
### Nettoyage de l'espace de travail
rm(list = ls())
Calcul_termes_echange <- function()
{
### On charge les onnées d'index
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
Index_res <- Index_res %>%
### On conserve uniquement la baseline
filter(Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
### On garde seulement les colonnes d'indices permettant le calcul du terme de l'échange
select(c("Ville", "Exports_imports", "year", "Index_value"))
### On reshape le dataframe : c'est à dire que l'on crée deux colonnes Imports et Exports issues de la colonne Exports_imports
Index_res_reshape <- spread_(Index_res, key = "Exports_imports", value = "Index_value")
Termes_echange_res <- Index_res_reshape %>%
### Calcul du termes de l'échange
mutate(Termes_echange_value = Exports / Imports) %>%
### On conserve uniquement les colonnes d'intérêt
select("Ville", "year", "Termes_echange_value") %>%
mutate_if(is.character, as.factor)
### On écrit le csv résultant
write.csv2(Termes_echange_res,
"./scripts/Edouard/Termes_echange_results.csv",
row.names = F)
for (Ville_cons in levels(Termes_echange_res$Ville)) {
Title = Ville_cons
Terme_echange <- Termes_echange_res %>%
filter(Ville == Ville_cons) %>%
select(c("year", "Termes_echange_value"))
png(filename = paste0("./scripts/Edouard/Figure_termes_echange/", Title, ".png"),
width = 5000,
height = 2700,
res = 500)
plot(drop_na(Terme_echange), main = Ville_cons, type = "o")
### Fermeture de la fenêtre
dev.off()
}
}
Calcul_termes_echange()
rm(list = ls())
### A définir
setwd("C:/Users/pignede/Documents/GitHub/toflit18_data")
### Chargement des fonctions de récuprétion des valeurs des indices
source("./scripts/Edouard/Trend_script/Recuperation_index_value.R")
### Chargement des fonctions de récuprétion des valeurs des indices
source("./scripts/Edouard/Trend_script/Recuperation_index_value.R")
Termes_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Termes_echange <- Recuperation_termes_echange(Port = Port)
Termes_echange <- merge(Termes_echange, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Termes_echange_value) ~ year + War_var, data = Termes_echange)
Termes_reg_trend[[paste0("trend_", Port, "_")]] = trend
#
#
# Table = export_summs(trend, trend_duree, error.pos = "right",
#                      model.names = c("Simple_trend", "dureeratic_trend"),
#                      error_pos = "right")
}
Table_trend = export_summs(Termes_reg_trend, error.pos = "right",
model.names = names(Termes_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_results_termes_echange_trend.xlsx",
digits = 4)
Termes_reg_trend <- list()
for (Port in c("Marseille", "Bordeaux", "La Rochelle", "Nantes", "Bayonne", "Rennes")) {
Termes_echange <- Recuperation_termes_echange(Port = Port)
Termes_echange <- merge(Termes_echange, War_data_frame,
"year" = "year",
all.x = T, all.y = F)
trend <- lm(log(Termes_echange_value) ~ year + War_non_ter, data = Termes_echange)
Termes_reg_trend[[paste0("trend_", Port, "_")]] = trend
#
#
# Table = export_summs(trend, trend_duree, error.pos = "right",
#                      model.names = c("Simple_trend", "dureeratic_trend"),
#                      error_pos = "right")
}
Table_trend = export_summs(Termes_reg_trend, error.pos = "right",
model.names = names(Termes_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_results_termes_echange_trend.xlsx",
digits = 4)
Table_trend = export_summs(Termes_reg_trend, error.pos = "right",
model.names = names(Termes_reg_trend),
error_pos = "right",
to.file = "xlsx",
file.name = "./scripts/Edouard/Regression_results/Regression_results_termes_echange_trend.xlsx",
digits = 4)
Wheat_price <- read.csv2("./scripts/Edouard/Wheat_price/Wheat_prices_FRANCE(Epstein-Federico-Schulze-Volckart_data-base).csv")
Wheat_price <- read.xlsx("./scripts/Edouard/Wheat_price/Wheat_prices_FRANCE(Epstein-Federico-Schulze-Volckart_data-base).xlsx")
plot(Wheat_price$Market, Wheat_price$Bordeaux)
plot(Wheat_price$Market, Wheat_price$Bordeaux)
plot(Wheat_price$Market, Wheat_price$Bordeaux)
plot(Wheat_price$Market, Wheat_price$Bordeaux)
plot(Wheat_price$Market, Wheat_price$Bordeaux)
plot(Wheat_price$Market, Wheat_price$Bordeaux)
plot(Wheat_price$Market, Wheat_price$Bordeaux)
plot(Wheat_price$Market, Wheat_price$Bordeaux)
plot(Wheat_price$Market, Wheat_price$Bordeaux)
plot(Wheat_price$Market, Wheat_price$Bordeaux, type = "l")
plot(drop_na(Wheat_price$Market), drop_na(Wheat_price$Bordeaux), type = "l")
plot(drop_na(Wheat_price[, c("Market", "Bordeaux")]), type = "l")
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
Index_res <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville = "Bordeaux" Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select("year", "Index_value")
Index_res <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville = "Bordeaux" Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
Index_res <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville = "Bordeaux" Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
library(dplyr)
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
Index_res <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville = "Bordeaux" Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_res <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville = "Bordeaux" Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Exports_imports", "Index_value"))
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
Index_res <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville = "Bordeaux" Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F)
Index_res <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville = "Bordeaux", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F)
Index_res <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == "Bordeaux", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Exports_imports", "Index_value"))
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
Index_res <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == "Bordeaux", Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res, Wheat_price[, c("Market", "Bordeaux")],
by.x = "year", by.y = "Market", all.x = T)
cor(Index_and_commodity$Index_value, Index_and_commodity$Bordeaux)
Index_and_commodity
cor(Index_and_commodity$Index_value, Index_and_commodity$Bordeaux, complete.obs = T)
cor(Index_and_commodity$Index_value, Index_and_commodity$Bordeaux, use = "complete.obs")
reg <- lm(Index_value ~ Bordeaux, data = Index_and_commodity)
summary(reg)
reg <- lm(Index_value ~ Bordeaux + lag(Bordeaux), data = Index_and_commodity)
summary(reg)
reg <- lm(Index_value ~ lag(Bordeaux), data = Index_and_commodity)
summary(reg)
reg <- lm(Index_value ~ Bordeaux, data = Index_and_commodity)
summary(reg)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
Wheat_price <- read.xlsx("./scripts/Edouard/Wheat_price/Wheat_prices_FRANCE(Epstein-Federico-Schulze-Volckart_data-base).xlsx")
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
for (Ville in c("Marseille", "Bordeaux", "Rennes", "Bayonnes")) {
Index_res <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ Wheat_price, data = Index_and_commodity)
print(summary(reg))
}
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
for (Ville in c("Marseille", "Bordeaux", "Rennes", "Bayonnes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ Wheat_price, data = Index_and_commodity)
print(summary(reg))
}
for (Ville in c("Marseille", "Bordeaux", "Rennes", "Bayonnes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Exports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ Wheat_price, data = Index_and_commodity)
print(summary(reg))
}
for (Ville in c("Marseille", "Bordeaux", "Rennes", "Bayonne")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Exports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ Wheat_price, data = Index_and_commodity)
print(summary(reg))
}
for (Ville in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Exports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ Wheat_price, data = Index_and_commodity)
print(summary(reg))
}
for (Ville in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ Wheat_price, data = Index_and_commodity)
print(summary(reg))
}
for (Ville in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ Wheat_price, data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ Wheat_price, data = Index_and_commodity)
}
for (Ville in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ Wheat_price + lag(Wheat_price), data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ Wheat_price, data = Index_and_commodity)
}
for (Ville in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ lag(Wheat_price), data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ Wheat_price, data = Index_and_commodity)
}
for (Ville in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ year + lag(Wheat_price), data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ Wheat_price, data = Index_and_commodity)
}
for (Ville in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ year + lag(Wheat_price), data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ Wheat_price, data = Index_and_commodity)
print(cor(Index_and_commodity))
}
for (Ville in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ year + lag(Wheat_price), data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ Wheat_price, data = Index_and_commodity)
print(cor(Index_and_commodity), use = "complete.obs")
}
for (Ville in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ year + lag(Wheat_price), data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ Wheat_price, data = Index_and_commodity)
print(cor(Index_and_commodity, use = "complete.obs"))
}
for (Ville in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ year + lag(Wheat_price), data = Index_and_commodity)
print(summary(reg))
barplot(Index_value ~ Wheat_price, data = Index_and_commodity)
print(cor(Index_and_commodity, use = "complete.obs"))
}
for (Ville in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ year + lag(Wheat_price), data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ year, data = Index_and_commodity)
plot(Wheat_price ~ year, data = Index_and_commodity)
print(cor(Index_and_commodity, use = "complete.obs"))
}
for (Ville in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville)
reg <- lm(Index_value ~ year + lag(Wheat_price), data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ year, data = Index_and_commodity, type = "o")
plot(Wheat_price ~ year, data = Index_and_commodity, type = "o")
print(cor(Index_and_commodity, use = "complete.obs"))
}
Index_res_ville
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
for (Ville_cons in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville_cons, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville_cons)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville_cons)
reg <- lm(Index_value ~ year + lag(Wheat_price), data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ year, data = Index_and_commodity, type = "o")
plot(Wheat_price ~ year, data = Index_and_commodity, type = "o")
print(cor(Index_and_commodity, use = "complete.obs"))
}
for (Ville_cons in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville_cons, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville_cons)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville_cons)
reg <- lm(Index_value ~ Wheat_price, data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ year, data = Index_and_commodity, type = "o")
plot(Wheat_price ~ year, data = Index_and_commodity, type = "o")
print(cor(Index_and_commodity, use = "complete.obs"))
}
for (Ville_cons in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville_cons, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville_cons)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville_cons)
reg <- lm(Index_value ~ lag(Wheat_price), data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ year, data = Index_and_commodity, type = "o")
plot(Wheat_price ~ year, data = Index_and_commodity, type = "o")
print(cor(Index_and_commodity, use = "complete.obs"))
}
for (Ville_cons in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville_cons, Exports_imports == "Exports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville_cons)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville_cons)
reg <- lm(Index_value ~ lag(Wheat_price), data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ year, data = Index_and_commodity, type = "o")
plot(Wheat_price ~ year, data = Index_and_commodity, type = "o")
print(cor(Index_and_commodity, use = "complete.obs"))
}
for (Ville_cons in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville_cons, Exports_imports == "Exports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville_cons)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville_cons)
reg <- lm(Index_value ~ Wheat_price, data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ year, data = Index_and_commodity, type = "o")
plot(Wheat_price ~ year, data = Index_and_commodity, type = "o")
print(cor(Index_and_commodity, use = "complete.obs"))
}
for (Ville_cons in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville_cons, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville_cons)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville_cons)
reg <- lm(Index_value ~ Wheat_price, data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ year, data = Index_and_commodity, type = "o")
plot(Wheat_price ~ year, data = Index_and_commodity, type = "o")
print(cor(Index_and_commodity, use = "complete.obs"))
}
