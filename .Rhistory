library(sp)
library(sf)
library(rgdal)
library(gstat)
library(automap)
library(raster)
library(stringr)
library(spatialEco)
library(exactextractr)
library(ncdf4)
library(tidyverse)
library(ncdump)
library(sf)
library(lattice)
library(RColorBrewer)
library(parallel)
library(chirps)
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library(rdhs)
### Chargement de la carte du Snégal
Senegal <- ne_states(country = "Senegal", returnclass = "sp")
install.packages("rnaturalearthhires", repos = "http://packages.ropensci.org", type = "source")
library(sp)
library(sf)
library(rgdal)
library(gstat)
library(automap)
library(raster)
library(stringr)
library(spatialEco)
library(exactextractr)
library(ncdf4)
library(tidyverse)
library(ncdump)
library(sf)
library(lattice)
library(RColorBrewer)
library(parallel)
library(chirps)
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library("rnaturalearthhires")
library(rdhs)
rm(list = ls())
### On se connecte à ma session DHS
set_rdhs_config(email = "edouard.pignede@ird.fr",
project = "Senegal vulnerability to climate change")
### On selectionne le DHS chargé que l'on veut télécharger
### SN => Sénégal ; FL => Flat file :plus rapide ;HR => Household Recode ; KR => children's recode
datasets_HR <- dhs_datasets(countryIds = "SN",
surveyYear = "2019",
fileFormat = "FL",
fileType = "HR" )
datasets_KR <- dhs_datasets(countryIds = "SN",
surveyYear = "2019",
fileFormat = "FL",
fileType = "KR" )
datasets_IR <- dhs_datasets(countryIds = "SN",
surveyYear = "2019",
fileFormat = "FL",
fileType = "IR" )
### On le télécharge
downloads_HR <- get_datasets(datasets_HR$FileName)
downloads_KR <- get_datasets(datasets_KR$FileName)
downloads_IR <- get_datasets(datasets_IR$FileName)
### On le charge sur R
data_hous <- readRDS(downloads_HR$SNHR8AFL)
data_child <- readRDS(downloads_KR$SNKR8AFL)
data_women <- readRDS(downloads_IR$SNIR8AFL)
data_women$v106
library(dplyr)
library(plyr)
library(tidyverse)
library(stringr)
library(readr)
library(pracma)
library(IndexNumR)
library(hpiR)
library(tidyverse)
read_sav("C:/Users/pignede/menage_final.sav")
install.packages("haven")
read_sav("C:/Users/pignede/menage_final.sav")
devtools::install_github("tidyverse/haven")
devtools::install_github("tidyverse/haven")
library(haven)
install.packages("haven")
library(haven)
read_sav("C:/Users/pignede/menage_final.sav")
read_sav("C:/Users/pignede/Telechargements/menage_final.sav")
read_sav("C:/Users/pignede/Downloads/menage_final.sav")
as.data.frame(read_sav("C:/Users/pignede/Downloads/menage_final.sav"))
a <- read_sav("C:/Users/pignede/Downloads/menage_final.sav")
a$id_menage
a$region
a$departement
a$M10
a$M9
library(sp)
library(xlsx)
library(stringr)
library(dplyr)
str_to_upper("Thèse")
### On charge l'ensemble des données
Mots_cles <- read.xlsx2("./Data/Mots-clés.xlsx",
sheetIndex = 1)
getwd()
library(dplyr)
library(tidyverse)
library(stringr)
library(readr)
library(pracma)
Wheat_price <- read.xlsx("./scripts/Edouard/Wheat_price/Wheat_prices_FRANCE(Epstein-Federico-Schulze-Volckart_data-base).xlsx")
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
for (Ville_cons in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville_cons, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville_cons)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville_cons)
reg <- lm(Index_value ~ Wheat_price, data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ year, data = Index_and_commodity, type = "o")
plot(Wheat_price ~ year, data = Index_and_commodity, type = "o")
print(cor(Index_and_commodity, use = "complete.obs"))
}
library(openxlsx)
Wheat_price <- read.xlsx("./scripts/Edouard/Wheat_price/Wheat_prices_FRANCE(Epstein-Federico-Schulze-Volckart_data-base).xlsx")
### A définir: emplacement du working directory
setwd("C:/Users/pignede/Documents/GitHub/toflit18_data")
### Nettoyage de l'espace de travail
rm(list = ls())
Wheat_price <- read.xlsx("./scripts/Edouard/Wheat_price/Wheat_prices_FRANCE(Epstein-Federico-Schulze-Volckart_data-base).xlsx")
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
for (Ville_cons in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville_cons, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville_cons)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville_cons)
reg <- lm(Index_value ~ Wheat_price, data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ year, data = Index_and_commodity, type = "o")
plot(Wheat_price ~ year, data = Index_and_commodity, type = "o")
print(cor(Index_and_commodity, use = "complete.obs"))
}
for (Ville_cons in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville_cons, Exports_imports == "Exports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville_cons)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville_cons)
reg <- lm(Index_value ~ Wheat_price, data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ year, data = Index_and_commodity, type = "o")
plot(Wheat_price ~ year, data = Index_and_commodity, type = "o")
print(cor(Index_and_commodity, use = "complete.obs"))
}
Wheat_price <- read.xlsx("./scripts/Edouard/Wheat_price/Wheat_prices_FRANCE(Epstein-Federico-Schulze-Volckart_data-base).xlsx")
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
for (Ville_cons in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville_cons, Exports_imports == "Exports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville_cons)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville_cons)
reg <- lm(log(Index_value) ~ log(Wheat_price), data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ year, data = Index_and_commodity, type = "o")
plot(Wheat_price ~ year, data = Index_and_commodity, type = "o")
print(cor(Index_and_commodity, use = "complete.obs"))
}
for (Ville_cons in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville_cons, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville_cons)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville_cons)
reg <- lm(log(Index_value) ~ log(Wheat_price), data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ year, data = Index_and_commodity, type = "o")
plot(Wheat_price ~ year, data = Index_and_commodity, type = "o")
print(cor(Index_and_commodity, use = "complete.obs"))
}
Wheat_price <- read.xlsx("./scripts/Edouard/Wheat_price/Wheat_prices_FRANCE(Epstein-Federico-Schulze-Volckart_data-base).xlsx")
Index_res <- read.csv2("./scripts/Edouard/Index_results.csv", row.names = NULL, dec = ",")
for (Ville_cons in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville_cons, Exports_imports == "Imports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville_cons)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville_cons)
reg <- lm(log(Index_value) ~ log(Wheat_price) + year, data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ year, data = Index_and_commodity, type = "o")
plot(Wheat_price ~ year, data = Index_and_commodity, type = "o")
print(cor(Index_and_commodity, use = "complete.obs"))
}
for (Ville_cons in c("Marseille", "Bordeaux", "Rennes")) {
Index_res_ville <- Index_res %>%
### On conserve uniquement la baseline
filter(Ville == Ville_cons, Exports_imports == "Exports", Outliers == T & Outliers_coef == 10 & Trans_number == 0 & Prod_problems == F &
Product_select == F & Remove_double == T & Ponderation == T & Pond_log == F) %>%
select(c("year", "Index_value"))
Index_and_commodity <- merge(Index_res_ville, Wheat_price[, c("Market", Ville_cons)],
by.x = "year", by.y = "Market", all.x = T)
names(Index_and_commodity) <- c("year", "Index_value", "Wheat_price")
print(Ville_cons)
reg <- lm(log(Index_value) ~ log(Wheat_price) + year, data = Index_and_commodity)
print(summary(reg))
plot(Index_value ~ year, data = Index_and_commodity, type = "o")
plot(Wheat_price ~ year, data = Index_and_commodity, type = "o")
print(cor(Index_and_commodity, use = "complete.obs"))
}
