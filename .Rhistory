library(sp)
library(sf)
library(rgdal)
library(gstat)
library(automap)
library(raster)
library(stringr)
library(spatialEco)
library(exactextractr)
library(ncdf4)
library(tidyverse)
library(ncdump)
library(sf)
library(lattice)
library(RColorBrewer)
library(parallel)
library(chirps)
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library(rdhs)
### Chargement de la carte du Snégal
Senegal <- ne_states(country = "Senegal", returnclass = "sp")
install.packages("rnaturalearthhires", repos = "http://packages.ropensci.org", type = "source")
library(sp)
library(sf)
library(rgdal)
library(gstat)
library(automap)
library(raster)
library(stringr)
library(spatialEco)
library(exactextractr)
library(ncdf4)
library(tidyverse)
library(ncdump)
library(sf)
library(lattice)
library(RColorBrewer)
library(parallel)
library(chirps)
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library("rnaturalearthhires")
library(rdhs)
rm(list = ls())
### On se connecte à ma session DHS
set_rdhs_config(email = "edouard.pignede@ird.fr",
project = "Senegal vulnerability to climate change")
### On selectionne le DHS chargé que l'on veut télécharger
### SN => Sénégal ; FL => Flat file :plus rapide ;HR => Household Recode ; KR => children's recode
datasets_HR <- dhs_datasets(countryIds = "SN",
surveyYear = "2019",
fileFormat = "FL",
fileType = "HR" )
datasets_KR <- dhs_datasets(countryIds = "SN",
surveyYear = "2019",
fileFormat = "FL",
fileType = "KR" )
datasets_IR <- dhs_datasets(countryIds = "SN",
surveyYear = "2019",
fileFormat = "FL",
fileType = "IR" )
### On le télécharge
downloads_HR <- get_datasets(datasets_HR$FileName)
downloads_KR <- get_datasets(datasets_KR$FileName)
downloads_IR <- get_datasets(datasets_IR$FileName)
### On le charge sur R
data_hous <- readRDS(downloads_HR$SNHR8AFL)
data_child <- readRDS(downloads_KR$SNKR8AFL)
data_women <- readRDS(downloads_IR$SNIR8AFL)
data_women$v106
library(dplyr)
library(plyr)
library(tidyverse)
library(stringr)
library(readr)
library(pracma)
library(IndexNumR)
library(hpiR)
library(tidyverse)
read_sav("C:/Users/pignede/menage_final.sav")
install.packages("haven")
read_sav("C:/Users/pignede/menage_final.sav")
devtools::install_github("tidyverse/haven")
devtools::install_github("tidyverse/haven")
library(haven)
install.packages("haven")
library(haven)
read_sav("C:/Users/pignede/menage_final.sav")
read_sav("C:/Users/pignede/Telechargements/menage_final.sav")
read_sav("C:/Users/pignede/Downloads/menage_final.sav")
as.data.frame(read_sav("C:/Users/pignede/Downloads/menage_final.sav"))
a <- read_sav("C:/Users/pignede/Downloads/menage_final.sav")
a$id_menage
a$region
a$departement
a$M10
a$M9
library(sp)
library(xlsx)
library(stringr)
library(dplyr)
str_to_upper("Thèse")
### On charge l'ensemble des données
Mots_cles <- read.xlsx2("./Data/Mots-clés.xlsx",
sheetIndex = 1)
getwd()
library(dplyr)
library(tidyverse)
library(stringr)
library(readr)
library(pracma)
library(openxlsx)
library(hpiR)
### Nettoyage de l'espace de travail
rm(list = ls())
### A définir: emplacement du working directory
setwd("C:/Users/pignede/Documents/GitHub/toflit18_data")
Ville = "Marseille"
Type = "Imports"
Ville_cons = "Marseille"
Index_composition <- read.csv2("./scripts/Edouard/Composition_index_results.csv", row.names = NULL)
Index_composition <- Index_composition %>%
filter(Ville == Ville_cons,
Exports_imports == Type) %>%
pivot_wider(id_cols = "year", names_from = "Product_sector", values_from = c("Index_value", "Part_value", "Part_flux"))
Index_composition
plot(Index_composition$year, Index_composition$Index_value_All, type = "o")
lines(Index_composition$year, Index_composition$Index_value_Manufactures, type = "o")
lines(Index_composition$year, Index_composition$`Index_value_Non-agricultural primary goods`, type = "o")
lines(Index_composition$year, Index_composition$Index_value_Agriculture, type = "o")
plot(Index_composition$year, Index_composition$Index_value_All, type = "o", col = "black")
lines(Index_composition$year, Index_composition$Index_value_Manufactures, type = "o", col = "red")
lines(Index_composition$year, Index_composition$`Index_value_Non-agricultural primary goods`, type = "o", col = "green")
lines(Index_composition$year, Index_composition$Index_value_Agriculture, type = "o", col = "blue")
plot(Index_composition$year, Index_composition$Index_value_All, type = "o", col = "black", ylim = c(50, 200))
lines(Index_composition$year, Index_composition$Index_value_Manufactures, type = "o", col = "red")
lines(Index_composition$year, Index_composition$`Index_value_Non-agricultural primary goods`, type = "o", col = "green")
lines(Index_composition$year, Index_composition$Index_value_Agriculture, type = "o", col = "blue")
barplot(Index_composition[, c("year", "Part_value_manufactures", "Part_value_Non-agricultural primary goods", "Part_value_Agriculture")])
barplot(Index_composition[, c("year", "Part_value_Manufactures", "Part_value_Non-agricultural primary goods", "Part_value_Agriculture")])
Index_composition[, c("year", "Part_value_Manufactures", "Part_value_Non-agricultural primary goods", "Part_value_Agriculture")]
barplot(Index_composition[, c("Part_value_Manufactures", "Part_value_Non-agricultural primary goods", "Part_value_Agriculture")])
barplot(as.matrix(Index_composition[, c("Part_value_Manufactures", "Part_value_Non-agricultural primary goods", "Part_value_Agriculture")]))
barplot(transpose(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])))
barplot(cbind(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")]))
cbind(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])
barplot(rbind(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")]))
rbind(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])))
Index_composition <- read.csv2("./scripts/Edouard/Composition_index_results.csv", row.names = NULL)
Index_composition <- Index_composition %>%
filter(Ville == Ville_cons,
Exports_imports == Type) %>%
pivot_wider(id_cols = "year", names_from = "Product_sector", values_from = c("Index_value", "Part_value", "Part_flux")) %>%
mutate(Part_value_Manufactures_percent = Part_value_Manufactures / Part_value_All,
`Part_value_Non-agricultural primary goods_percent` = `Part_value_Non-agricultural primary goods` / Part_value_All,
Part_value_Agriculture_percent = Part_value_Agriculture / Part_value_All)
Index_composition
Index_composition$`Part_value_Non-agricultural primary goods_percent`
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures_percent",
"Part_value_Non-agricultural primary goods_percent",
"Part_value_Agriculture_percent")])))
t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")]))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = "topleft")
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = legend("topleft"))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list("topleft"))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = "topleft"))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = 1.2))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(y = 1.2))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = 1725, y = 1.2))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = 0, y = 1.2))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = 0, y = 1.1))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = 1, y = 1.1))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = 10, y = 1.1))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = 100, y = 1.1))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = 50, y = 1.1))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = 30, y = 1.1))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = 40, y = 1.1))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures_percent",
"Part_value_Non-agricultural primary goods_percent",
"Part_value_Agriculture_percent")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = 40, y = 1.1))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures",
"Part_value_Non-agricultural primary goods",
"Part_value_Agriculture")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = 40, y = 1.1))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures_percent",
"Part_value_Non-agricultural primary goods_percent",
"Part_value_Agriculture_percent")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = 40, y = 1.1))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures_percent",
"Part_value_Non-agricultural primary goods_percent",
"Part_value_Agriculture_percent")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = 40, y = 1.2))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures_percent",
"Part_value_Non-agricultural primary goods_percent",
"Part_value_Agriculture_percent")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = 40, y = 1.25))
barplot(t(as.matrix(Index_composition[, c("Part_value_Manufactures_percent",
"Part_value_Non-agricultural primary goods_percent",
"Part_value_Agriculture_percent")])),
names.arg = Index_composition$year,
legend.text = c("Manufactures", "Non-agricultural primary goods", "Agriculture"),
args.legend = list(x = "topright"))
